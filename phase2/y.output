State 22 conflicts: 25 reduce/reduce
State 23 conflicts: 1 reduce/reduce
State 157 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 stmt: expr SEMICOLON
    3     | ifstmt
    4     | whilestmt
    5     | forstmt
    6     | returnstmt
    7     | BREAK SEMICOLON
    8     | CONTINUE SEMICOLON
    9     | block
   10     | block_func
   11     | funcdef
   12     | SEMICOLON

   13 statements: statements stmt
   14           | stmt

   15 expr: assignexpr
   16     | expr PLUS expr
   17     | expr MINUS expr
   18     | expr ASTERISK expr
   19     | expr DIVISION expr
   20     | expr PERCENT expr
   21     | expr GREATER expr
   22     | expr GREATER_EQUALS expr
   23     | expr LESS expr
   24     | expr LESS_EQUALS expr
   25     | expr EQUALS expr
   26     | expr DIFFERENT expr
   27     | expr AND expr
   28     | expr OR expr
   29     | term

   30 term: LEFT_BRACKETS expr RIGHT_BRACKETS
   31     | MINUS expr
   32     | NOT expr
   33     | PLUS_PLUS lvalue
   34     | lvalue PLUS_PLUS
   35     | MINUS_MINUS lvalue
   36     | lvalue MINUS_MINUS
   37     | primary

   38 assignexpr: lvalue ASSIGN expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_BRACKETS funcdef RIGHT_BRACKETS
   43        | const

   44 lvalue: ID
   45       | LOCALL ID
   46       | DOUBLE_COLON ID
   47       | member

   48 member: lvalue DOT ID
   49       | lvalue LEFT_SQUARE expr RIGHT_SQUARE
   50       | call DOT ID
   51       | call LEFT_SQUARE expr RIGHT_SQUARE

   52 call: call LEFT_BRACKETS elist RIGHT_BRACKETS
   53     | lvalue callsuffix
   54     | LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

   55 callsuffix: normcall
   56           | methodcall

   57 normcall: LEFT_BRACKETS elist RIGHT_BRACKETS

   58 methodcall: Diaeresis ID LEFT_BRACKETS elist RIGHT_BRACKETS

   59 elist: expr
   60      | expr COMMA elist
   61      | %empty

   62 objectdef: LEFT_SQUARE elist RIGHT_SQUARE
   63          | LEFT_SQUARE indexed RIGHT_SQUARE

   64 indexed: indexedelem
   65        | indexedelem COMMA indexed
   66        | %empty

   67 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   68 $@1: %empty

   69 block: LEFT_BRACE $@1 RIGHT_BRACE

   70 $@2: %empty

   71 block: LEFT_BRACE $@2 statements RIGHT_BRACE

   72 $@3: %empty

   73 block_func: LEFT_BRACE $@3 RIGHT_BRACE

   74 $@4: %empty

   75 block_func: LEFT_BRACE $@4 statements RIGHT_BRACE

   76 $@5: %empty

   77 $@6: %empty

   78 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func

   79 $@7: %empty

   80 $@8: %empty

   81 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS block_func

   82 const: INTEGER
   83      | FLOAT
   84      | STRING
   85      | NIL
   86      | TRUE
   87      | FALSE

   88 idlist: ID

   89 $@9: %empty

   90 idlist: ID $@9 COMMA idlist
   91       | %empty

   92 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt
   93       | IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt

   94 $@10: %empty

   95 whilestmt: WHILE LEFT_BRACKETS $@10 expr RIGHT_BRACKETS stmt

   96 $@11: %empty

   97 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

   98 returnstmt: RETURN expr SEMICOLON
   99           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 44 45 46 48 50 58 78 88 90
INTEGER (259) 82
FLOAT (260) 83
IF (261) 92 93
ELSE (262) 92
WHILE (263) 95
FOR (264) 97
FUNCTION (265) 78 81
RETURN (266) 98 99
BREAK (267) 7
CONTINUE (268) 8
AND (269) 27
NOT (270) 32
OR (271) 28
LOCALL (272) 45
TRUE (273) 86
FALSE (274) 87
NIL (275) 85
STRING (276) 84
EQUALS (277) 25
PLUS (278) 16
ASSIGN (279) 38
MINUS (280) 17 31
UMINUS (281)
ASTERISK (282) 18
DIVISION (283) 19
PERCENT (284) 20
DIFFERENT (285) 26
PLUS_PLUS (286) 33 34
MINUS_MINUS (287) 35 36
GREATER (288) 21
LESS (289) 23
GREATER_EQUALS (290) 22
LESS_EQUALS (291) 24
SEMICOLON (292) 2 7 8 12 97 98 99
COMMA (293) 60 65 90
COLON (294) 67
DOUBLE_COLON (295) 46
DOT (296) 48 50
Diaeresis (297) 58
LEFT_BRACE (298) 67 69 71 73 75
RIGHT_BRACE (299) 67 69 71 73 75
LEFT_SQUARE (300) 49 51 62 63
RIGHT_SQUARE (301) 49 51 62 63
LEFT_BRACKETS (302) 30 42 52 54 57 58 78 81 92 93 95 97
RIGHT_BRACKETS (303) 30 42 52 54 57 58 78 81 92 93 95 97


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
stmt (51)
    on left: 2 3 4 5 6 7 8 9 10 11 12, on right: 13 14 92 93 95 97
statements (52)
    on left: 13 14, on right: 1 13 71 75
expr (53)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    2 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 38 49 51 59 60
    67 92 93 95 97 98
term (54)
    on left: 30 31 32 33 34 35 36 37, on right: 29
assignexpr (55)
    on left: 38, on right: 15
primary (56)
    on left: 39 40 41 42 43, on right: 37
lvalue (57)
    on left: 44 45 46 47, on right: 33 34 35 36 38 39 48 49 53
member (58)
    on left: 48 49 50 51, on right: 47
call (59)
    on left: 52 53 54, on right: 40 50 51 52
callsuffix (60)
    on left: 55 56, on right: 53
normcall (61)
    on left: 57, on right: 55
methodcall (62)
    on left: 58, on right: 56
elist (63)
    on left: 59 60 61, on right: 52 54 57 58 60 62 97
objectdef (64)
    on left: 62 63, on right: 41
indexed (65)
    on left: 64 65 66, on right: 63 65
indexedelem (66)
    on left: 67, on right: 64 65
block (67)
    on left: 69 71, on right: 9
$@1 (68)
    on left: 68, on right: 69
$@2 (69)
    on left: 70, on right: 71
block_func (70)
    on left: 73 75, on right: 10 78 81
$@3 (71)
    on left: 72, on right: 73
$@4 (72)
    on left: 74, on right: 75
funcdef (73)
    on left: 78 81, on right: 11 42 54
$@5 (74)
    on left: 76, on right: 78
$@6 (75)
    on left: 77, on right: 78
$@7 (76)
    on left: 79, on right: 81
$@8 (77)
    on left: 80, on right: 81
const (78)
    on left: 82 83 84 85 86 87, on right: 43
idlist (79)
    on left: 88 90 91, on right: 78 81 90
$@9 (80)
    on left: 89, on right: 90
ifstmt (81)
    on left: 92 93, on right: 3
whilestmt (82)
    on left: 95, on right: 4
$@10 (83)
    on left: 94, on right: 95
forstmt (84)
    on left: 97, on right: 5
$@11 (85)
    on left: 96, on right: 97
returnstmt (86)
    on left: 98 99, on right: 6


State 0

    0 $accept: . program $end

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    program     go to state 25
    stmt        go to state 26
    statements  go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 1

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 2

   82 const: INTEGER .

    $default  reduce using rule 82 (const)


State 3

   83 const: FLOAT .

    $default  reduce using rule 83 (const)


State 4

   92 ifstmt: IF . LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt
   93       | IF . LEFT_BRACKETS expr RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 44


State 5

   95 whilestmt: WHILE . LEFT_BRACKETS $@10 expr RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 45


State 6

   97 forstmt: FOR . LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 46


State 7

   78 funcdef: FUNCTION . ID $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func
   81        | FUNCTION . $@7 LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS block_func

    ID  shift, and go to state 47

    $default  reduce using rule 79 ($@7)

    $@7  go to state 48


State 8

   98 returnstmt: RETURN . expr SEMICOLON
   99           | RETURN . SEMICOLON

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 49
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 50
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 9

    7 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 10

    8 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 11

   32 term: NOT . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 53
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 12

   45 lvalue: LOCALL . ID

    ID  shift, and go to state 54


State 13

   86 const: TRUE .

    $default  reduce using rule 86 (const)


State 14

   87 const: FALSE .

    $default  reduce using rule 87 (const)


State 15

   85 const: NIL .

    $default  reduce using rule 85 (const)


State 16

   84 const: STRING .

    $default  reduce using rule 84 (const)


State 17

   31 term: MINUS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 55
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 18

   33 term: PLUS_PLUS . lvalue

    ID             shift, and go to state 1
    LOCALL         shift, and go to state 12
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACKETS  shift, and go to state 56

    lvalue  go to state 57
    member  go to state 33
    call    go to state 58


State 19

   35 term: MINUS_MINUS . lvalue

    ID             shift, and go to state 1
    LOCALL         shift, and go to state 12
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACKETS  shift, and go to state 56

    lvalue  go to state 59
    member  go to state 33
    call    go to state 58


State 20

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 21

   46 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 60


State 22

   69 block: LEFT_BRACE . $@1 RIGHT_BRACE
   71      | LEFT_BRACE . $@2 statements RIGHT_BRACE
   73 block_func: LEFT_BRACE . $@3 RIGHT_BRACE
   75           | LEFT_BRACE . $@4 statements RIGHT_BRACE

    ID             reduce using rule 70 ($@2)
    ID             [reduce using rule 74 ($@4)]
    INTEGER        reduce using rule 70 ($@2)
    INTEGER        [reduce using rule 74 ($@4)]
    FLOAT          reduce using rule 70 ($@2)
    FLOAT          [reduce using rule 74 ($@4)]
    IF             reduce using rule 70 ($@2)
    IF             [reduce using rule 74 ($@4)]
    WHILE          reduce using rule 70 ($@2)
    WHILE          [reduce using rule 74 ($@4)]
    FOR            reduce using rule 70 ($@2)
    FOR            [reduce using rule 74 ($@4)]
    FUNCTION       reduce using rule 70 ($@2)
    FUNCTION       [reduce using rule 74 ($@4)]
    RETURN         reduce using rule 70 ($@2)
    RETURN         [reduce using rule 74 ($@4)]
    BREAK          reduce using rule 70 ($@2)
    BREAK          [reduce using rule 74 ($@4)]
    CONTINUE       reduce using rule 70 ($@2)
    CONTINUE       [reduce using rule 74 ($@4)]
    NOT            reduce using rule 70 ($@2)
    NOT            [reduce using rule 74 ($@4)]
    LOCALL         reduce using rule 70 ($@2)
    LOCALL         [reduce using rule 74 ($@4)]
    TRUE           reduce using rule 70 ($@2)
    TRUE           [reduce using rule 74 ($@4)]
    FALSE          reduce using rule 70 ($@2)
    FALSE          [reduce using rule 74 ($@4)]
    NIL            reduce using rule 70 ($@2)
    NIL            [reduce using rule 74 ($@4)]
    STRING         reduce using rule 70 ($@2)
    STRING         [reduce using rule 74 ($@4)]
    MINUS          reduce using rule 70 ($@2)
    MINUS          [reduce using rule 74 ($@4)]
    PLUS_PLUS      reduce using rule 70 ($@2)
    PLUS_PLUS      [reduce using rule 74 ($@4)]
    MINUS_MINUS    reduce using rule 70 ($@2)
    MINUS_MINUS    [reduce using rule 74 ($@4)]
    SEMICOLON      reduce using rule 70 ($@2)
    SEMICOLON      [reduce using rule 74 ($@4)]
    DOUBLE_COLON   reduce using rule 70 ($@2)
    DOUBLE_COLON   [reduce using rule 74 ($@4)]
    LEFT_BRACE     reduce using rule 70 ($@2)
    LEFT_BRACE     [reduce using rule 74 ($@4)]
    RIGHT_BRACE    reduce using rule 68 ($@1)
    RIGHT_BRACE    [reduce using rule 72 ($@3)]
    LEFT_SQUARE    reduce using rule 70 ($@2)
    LEFT_SQUARE    [reduce using rule 74 ($@4)]
    LEFT_BRACKETS  reduce using rule 70 ($@2)
    LEFT_BRACKETS  [reduce using rule 74 ($@4)]
    $default       reduce using rule 70 ($@2)

    $@1  go to state 61
    $@2  go to state 62
    $@3  go to state 63
    $@4  go to state 64


State 23

   62 objectdef: LEFT_SQUARE . elist RIGHT_SQUARE
   63          | LEFT_SQUARE . indexed RIGHT_SQUARE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 65
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    RIGHT_SQUARE  reduce using rule 61 (elist)
    RIGHT_SQUARE  [reduce using rule 66 (indexed)]
    $default      reduce using rule 61 (elist)

    expr         go to state 66
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 67
    objectdef    go to state 35
    indexed      go to state 68
    indexedelem  go to state 69
    const        go to state 39


State 24

   30 term: LEFT_BRACKETS . expr RIGHT_BRACKETS
   42 primary: LEFT_BRACKETS . funcdef RIGHT_BRACKETS
   54 call: LEFT_BRACKETS . funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    FUNCTION       shift, and go to state 7
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 70
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 71
    const       go to state 39


State 25

    0 $accept: program . $end

    $end  shift, and go to state 72


State 26

   14 statements: stmt .

    $default  reduce using rule 14 (statements)


State 27

    1 program: statements .
   13 statements: statements . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 73
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 28

    2 stmt: expr . SEMICOLON
   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    SEMICOLON       shift, and go to state 87


State 29

   29 expr: term .

    $default  reduce using rule 29 (expr)


State 30

   15 expr: assignexpr .

    $default  reduce using rule 15 (expr)


State 31

   37 term: primary .

    $default  reduce using rule 37 (term)


State 32

   34 term: lvalue . PLUS_PLUS
   36     | lvalue . MINUS_MINUS
   38 assignexpr: lvalue . ASSIGN expr
   39 primary: lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   53 call: lvalue . callsuffix

    ASSIGN         shift, and go to state 88
    PLUS_PLUS      shift, and go to state 89
    MINUS_MINUS    shift, and go to state 90
    DOT            shift, and go to state 91
    Diaeresis      shift, and go to state 92
    LEFT_SQUARE    shift, and go to state 93
    LEFT_BRACKETS  shift, and go to state 94

    $default  reduce using rule 39 (primary)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 33

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 34

   40 primary: call .
   50 member: call . DOT ID
   51       | call . LEFT_SQUARE expr RIGHT_SQUARE
   52 call: call . LEFT_BRACKETS elist RIGHT_BRACKETS

    DOT            shift, and go to state 98
    LEFT_SQUARE    shift, and go to state 99
    LEFT_BRACKETS  shift, and go to state 100

    $default  reduce using rule 40 (primary)


State 35

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 36

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 37

   10 stmt: block_func .

    $default  reduce using rule 10 (stmt)


State 38

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 39

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 40

    3 stmt: ifstmt .

    $default  reduce using rule 3 (stmt)


State 41

    4 stmt: whilestmt .

    $default  reduce using rule 4 (stmt)


State 42

    5 stmt: forstmt .

    $default  reduce using rule 5 (stmt)


State 43

    6 stmt: returnstmt .

    $default  reduce using rule 6 (stmt)


State 44

   92 ifstmt: IF LEFT_BRACKETS . expr RIGHT_BRACKETS stmt ELSE stmt
   93       | IF LEFT_BRACKETS . expr RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 101
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 45

   95 whilestmt: WHILE LEFT_BRACKETS . $@10 expr RIGHT_BRACKETS stmt

    $default  reduce using rule 94 ($@10)

    $@10  go to state 102


State 46

   97 forstmt: FOR LEFT_BRACKETS . $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    $default  reduce using rule 96 ($@11)

    $@11  go to state 103


State 47

   78 funcdef: FUNCTION ID . $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 76 ($@5)

    $@5  go to state 104


State 48

   81 funcdef: FUNCTION $@7 . LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS block_func

    LEFT_BRACKETS  shift, and go to state 105


State 49

   99 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 99 (returnstmt)


State 50

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   98 returnstmt: RETURN expr . SEMICOLON

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    SEMICOLON       shift, and go to state 106


State 51

    7 stmt: BREAK SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 52

    8 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 53

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   32 term: NOT expr .

    $default  reduce using rule 32 (term)


State 54

   45 lvalue: LOCALL ID .

    $default  reduce using rule 45 (lvalue)


State 55

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   31 term: MINUS expr .

    $default  reduce using rule 31 (term)


State 56

   54 call: LEFT_BRACKETS . funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

    FUNCTION  shift, and go to state 7

    funcdef  go to state 107


State 57

   33 term: PLUS_PLUS lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   53 call: lvalue . callsuffix

    DOT            shift, and go to state 91
    Diaeresis      shift, and go to state 92
    LEFT_SQUARE    shift, and go to state 93
    LEFT_BRACKETS  shift, and go to state 94

    $default  reduce using rule 33 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 58

   50 member: call . DOT ID
   51       | call . LEFT_SQUARE expr RIGHT_SQUARE
   52 call: call . LEFT_BRACKETS elist RIGHT_BRACKETS

    DOT            shift, and go to state 98
    LEFT_SQUARE    shift, and go to state 99
    LEFT_BRACKETS  shift, and go to state 100


State 59

   35 term: MINUS_MINUS lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   53 call: lvalue . callsuffix

    DOT            shift, and go to state 91
    Diaeresis      shift, and go to state 92
    LEFT_SQUARE    shift, and go to state 93
    LEFT_BRACKETS  shift, and go to state 94

    $default  reduce using rule 35 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 60

   46 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 46 (lvalue)


State 61

   69 block: LEFT_BRACE $@1 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 108


State 62

   71 block: LEFT_BRACE $@2 . statements RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 26
    statements  go to state 109
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 63

   73 block_func: LEFT_BRACE $@3 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 110


State 64

   75 block_func: LEFT_BRACE $@4 . statements RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 26
    statements  go to state 111
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 65

   67 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 112
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 66

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   59 elist: expr .
   60      | expr . COMMA elist

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    COMMA           shift, and go to state 113

    $default  reduce using rule 59 (elist)


State 67

   62 objectdef: LEFT_SQUARE elist . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 114


State 68

   63 objectdef: LEFT_SQUARE indexed . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 115


State 69

   64 indexed: indexedelem .
   65        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 116

    $default  reduce using rule 64 (indexed)


State 70

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   30 term: LEFT_BRACKETS expr . RIGHT_BRACKETS

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    RIGHT_BRACKETS  shift, and go to state 117


State 71

   42 primary: LEFT_BRACKETS funcdef . RIGHT_BRACKETS
   54 call: LEFT_BRACKETS funcdef . RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 118


State 72

    0 $accept: program $end .

    $default  accept


State 73

   13 statements: statements stmt .

    $default  reduce using rule 13 (statements)


State 74

   27 expr: expr AND . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 75

   28 expr: expr OR . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 76

   25 expr: expr EQUALS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 77

   16 expr: expr PLUS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 78

   17 expr: expr MINUS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 79

   18 expr: expr ASTERISK . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 80

   19 expr: expr DIVISION . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 81

   20 expr: expr PERCENT . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 82

   26 expr: expr DIFFERENT . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 83

   21 expr: expr GREATER . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 84

   23 expr: expr LESS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 85

   22 expr: expr GREATER_EQUALS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 86

   24 expr: expr LESS_EQUALS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 87

    2 stmt: expr SEMICOLON .

    $default  reduce using rule 2 (stmt)


State 88

   38 assignexpr: lvalue ASSIGN . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 89

   34 term: lvalue PLUS_PLUS .

    $default  reduce using rule 34 (term)


State 90

   36 term: lvalue MINUS_MINUS .

    $default  reduce using rule 36 (term)


State 91

   48 member: lvalue DOT . ID

    ID  shift, and go to state 133


State 92

   58 methodcall: Diaeresis . ID LEFT_BRACKETS elist RIGHT_BRACKETS

    ID  shift, and go to state 134


State 93

   49 member: lvalue LEFT_SQUARE . expr RIGHT_SQUARE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 135
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 94

   57 normcall: LEFT_BRACKETS . elist RIGHT_BRACKETS

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 136
    objectdef   go to state 35
    const       go to state 39


State 95

   53 call: lvalue callsuffix .

    $default  reduce using rule 53 (call)


State 96

   55 callsuffix: normcall .

    $default  reduce using rule 55 (callsuffix)


State 97

   56 callsuffix: methodcall .

    $default  reduce using rule 56 (callsuffix)


State 98

   50 member: call DOT . ID

    ID  shift, and go to state 137


State 99

   51 member: call LEFT_SQUARE . expr RIGHT_SQUARE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 138
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 100

   52 call: call LEFT_BRACKETS . elist RIGHT_BRACKETS

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 139
    objectdef   go to state 35
    const       go to state 39


State 101

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   92 ifstmt: IF LEFT_BRACKETS expr . RIGHT_BRACKETS stmt ELSE stmt
   93       | IF LEFT_BRACKETS expr . RIGHT_BRACKETS stmt

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    RIGHT_BRACKETS  shift, and go to state 140


State 102

   95 whilestmt: WHILE LEFT_BRACKETS $@10 . expr RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 141
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 103

   97 forstmt: FOR LEFT_BRACKETS $@11 . elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 142
    objectdef   go to state 35
    const       go to state 39


State 104

   78 funcdef: FUNCTION ID $@5 . LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func

    LEFT_BRACKETS  shift, and go to state 143


State 105

   81 funcdef: FUNCTION $@7 LEFT_BRACKETS . $@8 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 80 ($@8)

    $@8  go to state 144


State 106

   98 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 98 (returnstmt)


State 107

   54 call: LEFT_BRACKETS funcdef . RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 145


State 108

   69 block: LEFT_BRACE $@1 RIGHT_BRACE .

    $default  reduce using rule 69 (block)


State 109

   13 statements: statements . stmt
   71 block: LEFT_BRACE $@2 statements . RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    RIGHT_BRACE    shift, and go to state 146
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 73
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 110

   73 block_func: LEFT_BRACE $@3 RIGHT_BRACE .

    $default  reduce using rule 73 (block_func)


State 111

   13 statements: statements . stmt
   75 block_func: LEFT_BRACE $@4 statements . RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    RIGHT_BRACE    shift, and go to state 147
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 73
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 112

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   67 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    COLON           shift, and go to state 148


State 113

   60 elist: expr COMMA . elist

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 149
    objectdef   go to state 35
    const       go to state 39


State 114

   62 objectdef: LEFT_SQUARE elist RIGHT_SQUARE .

    $default  reduce using rule 62 (objectdef)


State 115

   63 objectdef: LEFT_SQUARE indexed RIGHT_SQUARE .

    $default  reduce using rule 63 (objectdef)


State 116

   65 indexed: indexedelem COMMA . indexed

    LEFT_BRACE  shift, and go to state 65

    $default  reduce using rule 66 (indexed)

    indexed      go to state 150
    indexedelem  go to state 69


State 117

   30 term: LEFT_BRACKETS expr RIGHT_BRACKETS .

    $default  reduce using rule 30 (term)


State 118

   42 primary: LEFT_BRACKETS funcdef RIGHT_BRACKETS .
   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS . LEFT_BRACKETS elist RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 151

    $default  reduce using rule 42 (primary)


State 119

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   27     | expr AND expr .
   28     | expr . OR expr

    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86

    $default  reduce using rule 27 (expr)


State 120

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   28     | expr OR expr .

    AND             shift, and go to state 74
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86

    $default  reduce using rule 28 (expr)


State 121

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   25     | expr EQUALS expr .
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86

    EQUALS     error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 122

   16 expr: expr . PLUS expr
   16     | expr PLUS expr .
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    ASTERISK  shift, and go to state 79
    DIVISION  shift, and go to state 80
    PERCENT   shift, and go to state 81

    $default  reduce using rule 16 (expr)


State 123

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   17     | expr MINUS expr .
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    ASTERISK  shift, and go to state 79
    DIVISION  shift, and go to state 80
    PERCENT   shift, and go to state 81

    $default  reduce using rule 17 (expr)


State 124

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   18     | expr ASTERISK expr .
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 125

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   19     | expr DIVISION expr .
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 126

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   20     | expr PERCENT expr .
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 127

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   26     | expr DIFFERENT expr .
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86

    EQUALS     error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 128

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   21     | expr GREATER expr .
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS      shift, and go to state 77
    MINUS     shift, and go to state 78
    ASTERISK  shift, and go to state 79
    DIVISION  shift, and go to state 80
    PERCENT   shift, and go to state 81

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 129

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   23     | expr LESS expr .
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS      shift, and go to state 77
    MINUS     shift, and go to state 78
    ASTERISK  shift, and go to state 79
    DIVISION  shift, and go to state 80
    PERCENT   shift, and go to state 81

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 130

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   22     | expr GREATER_EQUALS expr .
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS      shift, and go to state 77
    MINUS     shift, and go to state 78
    ASTERISK  shift, and go to state 79
    DIVISION  shift, and go to state 80
    PERCENT   shift, and go to state 81

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 131

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   24     | expr LESS_EQUALS expr .
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS      shift, and go to state 77
    MINUS     shift, and go to state 78
    ASTERISK  shift, and go to state 79
    DIVISION  shift, and go to state 80
    PERCENT   shift, and go to state 81

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 132

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   38 assignexpr: lvalue ASSIGN expr .

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86

    $default  reduce using rule 38 (assignexpr)


State 133

   48 member: lvalue DOT ID .

    $default  reduce using rule 48 (member)


State 134

   58 methodcall: Diaeresis ID . LEFT_BRACKETS elist RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 152


State 135

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   49 member: lvalue LEFT_SQUARE expr . RIGHT_SQUARE

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    RIGHT_SQUARE    shift, and go to state 153


State 136

   57 normcall: LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 154


State 137

   50 member: call DOT ID .

    $default  reduce using rule 50 (member)


State 138

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   51 member: call LEFT_SQUARE expr . RIGHT_SQUARE

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    RIGHT_SQUARE    shift, and go to state 155


State 139

   52 call: call LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 156


State 140

   92 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS . stmt ELSE stmt
   93       | IF LEFT_BRACKETS expr RIGHT_BRACKETS . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 157
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 141

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   95 whilestmt: WHILE LEFT_BRACKETS $@10 expr . RIGHT_BRACKETS stmt

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    RIGHT_BRACKETS  shift, and go to state 158


State 142

   97 forstmt: FOR LEFT_BRACKETS $@11 elist . SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    SEMICOLON  shift, and go to state 159


State 143

   78 funcdef: FUNCTION ID $@5 LEFT_BRACKETS . $@6 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 77 ($@6)

    $@6  go to state 160


State 144

   81 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 . idlist RIGHT_BRACKETS block_func

    ID  shift, and go to state 161

    $default  reduce using rule 91 (idlist)

    idlist  go to state 162


State 145

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS . LEFT_BRACKETS elist RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 151


State 146

   71 block: LEFT_BRACE $@2 statements RIGHT_BRACE .

    $default  reduce using rule 71 (block)


State 147

   75 block_func: LEFT_BRACE $@4 statements RIGHT_BRACE .

    $default  reduce using rule 75 (block_func)


State 148

   67 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 163
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 149

   60 elist: expr COMMA elist .

    $default  reduce using rule 60 (elist)


State 150

   65 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 65 (indexed)


State 151

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS . elist RIGHT_BRACKETS

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 164
    objectdef   go to state 35
    const       go to state 39


State 152

   58 methodcall: Diaeresis ID LEFT_BRACKETS . elist RIGHT_BRACKETS

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 165
    objectdef   go to state 35
    const       go to state 39


State 153

   49 member: lvalue LEFT_SQUARE expr RIGHT_SQUARE .

    $default  reduce using rule 49 (member)


State 154

   57 normcall: LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 57 (normcall)


State 155

   51 member: call LEFT_SQUARE expr RIGHT_SQUARE .

    $default  reduce using rule 51 (member)


State 156

   52 call: call LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 52 (call)


State 157

   92 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt . ELSE stmt
   93       | IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt .

    ELSE  shift, and go to state 166

    ELSE      [reduce using rule 93 (ifstmt)]
    $default  reduce using rule 93 (ifstmt)


State 158

   95 whilestmt: WHILE LEFT_BRACKETS $@10 expr RIGHT_BRACKETS . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 167
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 159

   97 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON . expr SEMICOLON elist RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 168
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 160

   78 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 . idlist RIGHT_BRACKETS block_func

    ID  shift, and go to state 161

    $default  reduce using rule 91 (idlist)

    idlist  go to state 169


State 161

   88 idlist: ID .
   90       | ID . $@9 COMMA idlist

    COMMA     reduce using rule 89 ($@9)
    $default  reduce using rule 88 (idlist)

    $@9  go to state 170


State 162

   81 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 idlist . RIGHT_BRACKETS block_func

    RIGHT_BRACKETS  shift, and go to state 171


State 163

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   67 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    RIGHT_BRACE     shift, and go to state 172


State 164

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 173


State 165

   58 methodcall: Diaeresis ID LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 174


State 166

   92 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 175
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 167

   95 whilestmt: WHILE LEFT_BRACKETS $@10 expr RIGHT_BRACKETS stmt .

    $default  reduce using rule 95 (whilestmt)


State 168

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . ASTERISK expr
   19     | expr . DIVISION expr
   20     | expr . PERCENT expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUALS expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUALS expr
   25     | expr . EQUALS expr
   26     | expr . DIFFERENT expr
   27     | expr . AND expr
   28     | expr . OR expr
   97 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr . SEMICOLON elist RIGHT_BRACKETS stmt

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    EQUALS          shift, and go to state 76
    PLUS            shift, and go to state 77
    MINUS           shift, and go to state 78
    ASTERISK        shift, and go to state 79
    DIVISION        shift, and go to state 80
    PERCENT         shift, and go to state 81
    DIFFERENT       shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUALS  shift, and go to state 85
    LESS_EQUALS     shift, and go to state 86
    SEMICOLON       shift, and go to state 176


State 169

   78 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 idlist . RIGHT_BRACKETS block_func

    RIGHT_BRACKETS  shift, and go to state 177


State 170

   90 idlist: ID $@9 . COMMA idlist

    COMMA  shift, and go to state 178


State 171

   81 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS . block_func

    LEFT_BRACE  shift, and go to state 179

    block_func  go to state 180


State 172

   67 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 67 (indexedelem)


State 173

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 54 (call)


State 174

   58 methodcall: Diaeresis ID LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 58 (methodcall)


State 175

   92 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt .

    $default  reduce using rule 92 (ifstmt)


State 176

   97 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON . elist RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 181
    objectdef   go to state 35
    const       go to state 39


State 177

   78 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS . block_func

    LEFT_BRACE  shift, and go to state 179

    block_func  go to state 182


State 178

   90 idlist: ID $@9 COMMA . idlist

    ID  shift, and go to state 161

    $default  reduce using rule 91 (idlist)

    idlist  go to state 183


State 179

   73 block_func: LEFT_BRACE . $@3 RIGHT_BRACE
   75           | LEFT_BRACE . $@4 statements RIGHT_BRACE

    RIGHT_BRACE  reduce using rule 72 ($@3)
    $default     reduce using rule 74 ($@4)

    $@3  go to state 63
    $@4  go to state 64


State 180

   81 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS block_func .

    $default  reduce using rule 81 (funcdef)


State 181

   97 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist . RIGHT_BRACKETS stmt

    RIGHT_BRACKETS  shift, and go to state 184


State 182

   78 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func .

    $default  reduce using rule 78 (funcdef)


State 183

   90 idlist: ID $@9 COMMA idlist .

    $default  reduce using rule 90 (idlist)


State 184

   97 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 185
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    block_func  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 185

   97 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt .

    $default  reduce using rule 97 (forstmt)
