Terminals unused in grammar

   REAL


State 22 conflicts: 1 shift/reduce, 1 reduce/reduce
State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 stmt: expr SEMICOLON
    3     | ifstmt
    4     | whilestmt
    5     | forstmt
    6     | returnstmt
    7     | BREAK SEMICOLON
    8     | CONTINUE SEMICOLON
    9     | block
   10     | funcdef
   11     | SEMICOLON

   12 statements: statements stmt
   13           | stmt

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr ASTERISK expr
   18     | expr DIVISION expr
   19     | expr PERCENT expr
   20     | expr GREATER expr
   21     | expr GREATER_EQUALS expr
   22     | expr LESS expr
   23     | expr LESS_EQUALS expr
   24     | expr EQUALS expr
   25     | expr DIFFERENT expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LEFT_BRACKETS expr RIGHT_BRACKETS
   30     | MINUS expr
   31     | NOT expr
   32     | PLUS_PLUS lvalue
   33     | lvalue PLUS_PLUS
   34     | MINUS_MINUS lvalue
   35     | lvalue MINUS_MINUS
   36     | primary

   37 $@1: %empty

   38 assignexpr: lvalue $@1 ASSIGN expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_BRACKETS funcdef RIGHT_BRACKETS
   43        | const

   44 lvalue: ID
   45       | LOCALL ID
   46       | DOUBLE_COLON ID
   47       | member

   48 member: lvalue DOT ID
   49       | lvalue LEFT_SQUARE expr RIGHT_SQUARE
   50       | call DOT ID
   51       | call LEFT_SQUARE expr RIGHT_SQUARE

   52 call: call LEFT_BRACKETS elist RIGHT_BRACKETS
   53     | lvalue callsuffix
   54     | LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

   55 callsuffix: normcall
   56           | methodcall

   57 normcall: LEFT_BRACKETS elist RIGHT_BRACKETS

   58 methodcall: Diaeresis ID LEFT_BRACKETS elist RIGHT_BRACKETS

   59 elist: expr
   60      | expr COMMA elist
   61      | %empty

   62 objectdef: LEFT_SQUARE elist RIGHT_SQUARE
   63          | LEFT_SQUARE indexed RIGHT_SQUARE
   64          | LEFT_SQUARE RIGHT_SQUARE

   65 indexed: indexedelem
   66        | indexedelem COMMA indexed
   67        | %empty

   68 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   69 $@2: %empty

   70 block: LEFT_BRACE $@2 RIGHT_BRACE

   71 $@3: %empty

   72 block: LEFT_BRACE $@3 statements RIGHT_BRACE

   73 block_func: LEFT_BRACE RIGHT_BRACE
   74           | LEFT_BRACE statements RIGHT_BRACE

   75 $@4: %empty

   76 $@5: %empty

   77 funcdef: FUNCTION ID $@4 LEFT_BRACKETS $@5 idlist RIGHT_BRACKETS block_func

   78 $@6: %empty

   79 funcdef: FUNCTION LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func

   80 const: NUMBER
   81      | STRING
   82      | NIL
   83      | TRUE
   84      | FALSE

   85 idlist: ID

   86 $@7: %empty

   87 idlist: ID $@7 COMMA idlist
   88       | %empty

   89 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt
   90       | IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt

   91 whilestmt: WHILE LEFT_BRACKETS expr RIGHT_BRACKETS stmt

   92 forstmt: FOR LEFT_BRACKETS elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

   93 returnstmt: RETURN expr SEMICOLON
   94           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 80
REAL (259)
ID (260) 44 45 46 48 50 58 77 85 87
IF (261) 89 90
ELSE (262) 89
WHILE (263) 91
FOR (264) 92
FUNCTION (265) 77 79
RETURN (266) 93 94
BREAK (267) 7
CONTINUE (268) 8
AND (269) 26
NOT (270) 31
OR (271) 27
LOCALL (272) 45
TRUE (273) 83
FALSE (274) 84
NIL (275) 82
STRING (276) 81
EQUALS (277) 24
PLUS (278) 15
ASSIGN (279) 38
MINUS (280) 16 30
UMINUS (281)
ASTERISK (282) 17
DIVISION (283) 18
PERCENT (284) 19
DIFFERENT (285) 25
PLUS_PLUS (286) 32 33
MINUS_MINUS (287) 34 35
GREATER (288) 20
LESS (289) 22
GREATER_EQUALS (290) 21
LESS_EQUALS (291) 23
SEMICOLON (292) 2 7 8 11 92 93 94
COMMA (293) 60 66 87
COLON (294) 68
DOUBLE_COLON (295) 46
DOT (296) 48 50
Diaeresis (297) 58
LEFT_BRACE (298) 68 70 72 73 74
RIGHT_BRACE (299) 68 70 72 73 74
LEFT_SQUARE (300) 49 51 62 63 64
RIGHT_SQUARE (301) 49 51 62 63 64
LEFT_BRACKETS (302) 29 42 52 54 57 58 77 79 89 90 91 92
RIGHT_BRACKETS (303) 29 42 52 54 57 58 77 79 89 90 91 92


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
stmt (51)
    on left: 2 3 4 5 6 7 8 9 10 11, on right: 12 13 89 90 91 92
statements (52)
    on left: 12 13, on right: 1 12 72 74
expr (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    2 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 38 49 51 59 60
    68 89 90 91 92 93
term (54)
    on left: 29 30 31 32 33 34 35 36, on right: 28
assignexpr (55)
    on left: 38, on right: 14
$@1 (56)
    on left: 37, on right: 38
primary (57)
    on left: 39 40 41 42 43, on right: 36
lvalue (58)
    on left: 44 45 46 47, on right: 32 33 34 35 38 39 48 49 53
member (59)
    on left: 48 49 50 51, on right: 47
call (60)
    on left: 52 53 54, on right: 40 50 51 52
callsuffix (61)
    on left: 55 56, on right: 53
normcall (62)
    on left: 57, on right: 55
methodcall (63)
    on left: 58, on right: 56
elist (64)
    on left: 59 60 61, on right: 52 54 57 58 60 62 92
objectdef (65)
    on left: 62 63 64, on right: 41
indexed (66)
    on left: 65 66 67, on right: 63 66
indexedelem (67)
    on left: 68, on right: 65 66
block (68)
    on left: 70 72, on right: 9
$@2 (69)
    on left: 69, on right: 70
$@3 (70)
    on left: 71, on right: 72
block_func (71)
    on left: 73 74, on right: 77 79
funcdef (72)
    on left: 77 79, on right: 10 42 54
$@4 (73)
    on left: 75, on right: 77
$@5 (74)
    on left: 76, on right: 77
$@6 (75)
    on left: 78, on right: 79
const (76)
    on left: 80 81 82 83 84, on right: 43
idlist (77)
    on left: 85 87 88, on right: 77 79 87
$@7 (78)
    on left: 86, on right: 87
ifstmt (79)
    on left: 89 90, on right: 3
whilestmt (80)
    on left: 91, on right: 4
forstmt (81)
    on left: 92, on right: 5
returnstmt (82)
    on left: 93 94, on right: 6


State 0

    0 $accept: . program $end

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    program     go to state 24
    stmt        go to state 25
    statements  go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 1

   80 const: NUMBER .

    $default  reduce using rule 80 (const)


State 2

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 3

   89 ifstmt: IF . LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt
   90       | IF . LEFT_BRACKETS expr RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 42


State 4

   91 whilestmt: WHILE . LEFT_BRACKETS expr RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 43


State 5

   92 forstmt: FOR . LEFT_BRACKETS elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 44


State 6

   77 funcdef: FUNCTION . ID $@4 LEFT_BRACKETS $@5 idlist RIGHT_BRACKETS block_func
   79        | FUNCTION . LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func

    ID             shift, and go to state 45
    LEFT_BRACKETS  shift, and go to state 46


State 7

   93 returnstmt: RETURN . expr SEMICOLON
   94           | RETURN . SEMICOLON

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 47
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 48
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 8

    7 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 9

    8 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 10

   31 term: NOT . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 51
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 11

   45 lvalue: LOCALL . ID

    ID  shift, and go to state 52


State 12

   83 const: TRUE .

    $default  reduce using rule 83 (const)


State 13

   84 const: FALSE .

    $default  reduce using rule 84 (const)


State 14

   82 const: NIL .

    $default  reduce using rule 82 (const)


State 15

   81 const: STRING .

    $default  reduce using rule 81 (const)


State 16

   30 term: MINUS . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 53
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 17

   32 term: PLUS_PLUS . lvalue

    ID             shift, and go to state 2
    LOCALL         shift, and go to state 11
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACKETS  shift, and go to state 54

    lvalue  go to state 55
    member  go to state 32
    call    go to state 56


State 18

   34 term: MINUS_MINUS . lvalue

    ID             shift, and go to state 2
    LOCALL         shift, and go to state 11
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACKETS  shift, and go to state 54

    lvalue  go to state 57
    member  go to state 32
    call    go to state 56


State 19

   11 stmt: SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 20

   46 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 58


State 21

   70 block: LEFT_BRACE . $@2 RIGHT_BRACE
   72      | LEFT_BRACE . $@3 statements RIGHT_BRACE

    RIGHT_BRACE  reduce using rule 69 ($@2)
    $default     reduce using rule 71 ($@3)

    $@2  go to state 59
    $@3  go to state 60


State 22

   62 objectdef: LEFT_SQUARE . elist RIGHT_SQUARE
   63          | LEFT_SQUARE . indexed RIGHT_SQUARE
   64          | LEFT_SQUARE . RIGHT_SQUARE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 61
    LEFT_SQUARE    shift, and go to state 22
    RIGHT_SQUARE   shift, and go to state 62
    LEFT_BRACKETS  shift, and go to state 23

    RIGHT_SQUARE  [reduce using rule 61 (elist)]
    RIGHT_SQUARE  [reduce using rule 67 (indexed)]

    expr         go to state 63
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 64
    objectdef    go to state 34
    indexed      go to state 65
    indexedelem  go to state 66
    const        go to state 37


State 23

   29 term: LEFT_BRACKETS . expr RIGHT_BRACKETS
   42 primary: LEFT_BRACKETS . funcdef RIGHT_BRACKETS
   54 call: LEFT_BRACKETS . funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    FUNCTION       shift, and go to state 6
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 67
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 68
    const       go to state 37


State 24

    0 $accept: program . $end

    $end  shift, and go to state 69


State 25

   13 statements: stmt .

    $default  reduce using rule 13 (statements)


State 26

    1 program: statements .
   12 statements: statements . stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    $default  reduce using rule 1 (program)

    stmt        go to state 70
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 27

    2 stmt: expr . SEMICOLON
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    SEMICOLON       shift, and go to state 84


State 28

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 29

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 30

   36 term: primary .

    $default  reduce using rule 36 (term)


State 31

   33 term: lvalue . PLUS_PLUS
   35     | lvalue . MINUS_MINUS
   38 assignexpr: lvalue . $@1 ASSIGN expr
   39 primary: lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   53 call: lvalue . callsuffix

    PLUS_PLUS      shift, and go to state 85
    MINUS_MINUS    shift, and go to state 86
    DOT            shift, and go to state 87
    Diaeresis      shift, and go to state 88
    LEFT_SQUARE    shift, and go to state 89
    LEFT_BRACKETS  shift, and go to state 90

    ASSIGN    reduce using rule 37 ($@1)
    $default  reduce using rule 39 (primary)

    $@1         go to state 91
    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 32

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 33

   40 primary: call .
   50 member: call . DOT ID
   51       | call . LEFT_SQUARE expr RIGHT_SQUARE
   52 call: call . LEFT_BRACKETS elist RIGHT_BRACKETS

    DOT            shift, and go to state 95
    LEFT_SQUARE    shift, and go to state 96
    LEFT_BRACKETS  shift, and go to state 97

    $default  reduce using rule 40 (primary)


State 34

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 35

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 36

   10 stmt: funcdef .

    $default  reduce using rule 10 (stmt)


State 37

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 38

    3 stmt: ifstmt .

    $default  reduce using rule 3 (stmt)


State 39

    4 stmt: whilestmt .

    $default  reduce using rule 4 (stmt)


State 40

    5 stmt: forstmt .

    $default  reduce using rule 5 (stmt)


State 41

    6 stmt: returnstmt .

    $default  reduce using rule 6 (stmt)


State 42

   89 ifstmt: IF LEFT_BRACKETS . expr RIGHT_BRACKETS stmt ELSE stmt
   90       | IF LEFT_BRACKETS . expr RIGHT_BRACKETS stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 98
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 43

   91 whilestmt: WHILE LEFT_BRACKETS . expr RIGHT_BRACKETS stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 99
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 44

   92 forstmt: FOR LEFT_BRACKETS . elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 100
    objectdef   go to state 34
    const       go to state 37


State 45

   77 funcdef: FUNCTION ID . $@4 LEFT_BRACKETS $@5 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 75 ($@4)

    $@4  go to state 101


State 46

   79 funcdef: FUNCTION LEFT_BRACKETS . $@6 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 78 ($@6)

    $@6  go to state 102


State 47

   94 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 94 (returnstmt)


State 48

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   93 returnstmt: RETURN expr . SEMICOLON

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    SEMICOLON       shift, and go to state 103


State 49

    7 stmt: BREAK SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 50

    8 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 51

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 52

   45 lvalue: LOCALL ID .

    $default  reduce using rule 45 (lvalue)


State 53

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: MINUS expr .

    $default  reduce using rule 30 (term)


State 54

   54 call: LEFT_BRACKETS . funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

    FUNCTION  shift, and go to state 6

    funcdef  go to state 104


State 55

   32 term: PLUS_PLUS lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   53 call: lvalue . callsuffix

    DOT            shift, and go to state 87
    Diaeresis      shift, and go to state 88
    LEFT_SQUARE    shift, and go to state 89
    LEFT_BRACKETS  shift, and go to state 90

    $default  reduce using rule 32 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 56

   50 member: call . DOT ID
   51       | call . LEFT_SQUARE expr RIGHT_SQUARE
   52 call: call . LEFT_BRACKETS elist RIGHT_BRACKETS

    DOT            shift, and go to state 95
    LEFT_SQUARE    shift, and go to state 96
    LEFT_BRACKETS  shift, and go to state 97


State 57

   34 term: MINUS_MINUS lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   53 call: lvalue . callsuffix

    DOT            shift, and go to state 87
    Diaeresis      shift, and go to state 88
    LEFT_SQUARE    shift, and go to state 89
    LEFT_BRACKETS  shift, and go to state 90

    $default  reduce using rule 34 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 58

   46 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 46 (lvalue)


State 59

   70 block: LEFT_BRACE $@2 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 105


State 60

   72 block: LEFT_BRACE $@3 . statements RIGHT_BRACE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    stmt        go to state 25
    statements  go to state 106
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 61

   68 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 107
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 62

   64 objectdef: LEFT_SQUARE RIGHT_SQUARE .

    $default  reduce using rule 64 (objectdef)


State 63

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   59 elist: expr .
   60      | expr . COMMA elist

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    COMMA           shift, and go to state 108

    $default  reduce using rule 59 (elist)


State 64

   62 objectdef: LEFT_SQUARE elist . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 109


State 65

   63 objectdef: LEFT_SQUARE indexed . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 110


State 66

   65 indexed: indexedelem .
   66        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 111

    $default  reduce using rule 65 (indexed)


State 67

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LEFT_BRACKETS expr . RIGHT_BRACKETS

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    RIGHT_BRACKETS  shift, and go to state 112


State 68

   42 primary: LEFT_BRACKETS funcdef . RIGHT_BRACKETS
   54 call: LEFT_BRACKETS funcdef . RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 113


State 69

    0 $accept: program $end .

    $default  accept


State 70

   12 statements: statements stmt .

    $default  reduce using rule 12 (statements)


State 71

   26 expr: expr AND . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 114
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 72

   27 expr: expr OR . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 115
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 73

   24 expr: expr EQUALS . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 116
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 74

   15 expr: expr PLUS . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 117
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   16 expr: expr MINUS . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 118
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   17 expr: expr ASTERISK . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 119
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   18 expr: expr DIVISION . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   19 expr: expr PERCENT . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   25 expr: expr DIFFERENT . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   20 expr: expr GREATER . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   22 expr: expr LESS . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   21 expr: expr GREATER_EQUALS . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

   23 expr: expr LESS_EQUALS . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 84

    2 stmt: expr SEMICOLON .

    $default  reduce using rule 2 (stmt)


State 85

   33 term: lvalue PLUS_PLUS .

    $default  reduce using rule 33 (term)


State 86

   35 term: lvalue MINUS_MINUS .

    $default  reduce using rule 35 (term)


State 87

   48 member: lvalue DOT . ID

    ID  shift, and go to state 127


State 88

   58 methodcall: Diaeresis . ID LEFT_BRACKETS elist RIGHT_BRACKETS

    ID  shift, and go to state 128


State 89

   49 member: lvalue LEFT_SQUARE . expr RIGHT_SQUARE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 90

   57 normcall: LEFT_BRACKETS . elist RIGHT_BRACKETS

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 130
    objectdef   go to state 34
    const       go to state 37


State 91

   38 assignexpr: lvalue $@1 . ASSIGN expr

    ASSIGN  shift, and go to state 131


State 92

   53 call: lvalue callsuffix .

    $default  reduce using rule 53 (call)


State 93

   55 callsuffix: normcall .

    $default  reduce using rule 55 (callsuffix)


State 94

   56 callsuffix: methodcall .

    $default  reduce using rule 56 (callsuffix)


State 95

   50 member: call DOT . ID

    ID  shift, and go to state 132


State 96

   51 member: call LEFT_SQUARE . expr RIGHT_SQUARE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 97

   52 call: call LEFT_BRACKETS . elist RIGHT_BRACKETS

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 134
    objectdef   go to state 34
    const       go to state 37


State 98

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   89 ifstmt: IF LEFT_BRACKETS expr . RIGHT_BRACKETS stmt ELSE stmt
   90       | IF LEFT_BRACKETS expr . RIGHT_BRACKETS stmt

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    RIGHT_BRACKETS  shift, and go to state 135


State 99

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   91 whilestmt: WHILE LEFT_BRACKETS expr . RIGHT_BRACKETS stmt

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    RIGHT_BRACKETS  shift, and go to state 136


State 100

   92 forstmt: FOR LEFT_BRACKETS elist . SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    SEMICOLON  shift, and go to state 137


State 101

   77 funcdef: FUNCTION ID $@4 . LEFT_BRACKETS $@5 idlist RIGHT_BRACKETS block_func

    LEFT_BRACKETS  shift, and go to state 138


State 102

   79 funcdef: FUNCTION LEFT_BRACKETS $@6 . idlist RIGHT_BRACKETS block_func

    ID  shift, and go to state 139

    $default  reduce using rule 88 (idlist)

    idlist  go to state 140


State 103

   93 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 93 (returnstmt)


State 104

   54 call: LEFT_BRACKETS funcdef . RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 141


State 105

   70 block: LEFT_BRACE $@2 RIGHT_BRACE .

    $default  reduce using rule 70 (block)


State 106

   12 statements: statements . stmt
   72 block: LEFT_BRACE $@3 statements . RIGHT_BRACE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    RIGHT_BRACE    shift, and go to state 142
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    stmt        go to state 70
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 107

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   68 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    COLON           shift, and go to state 143


State 108

   60 elist: expr COMMA . elist

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 144
    objectdef   go to state 34
    const       go to state 37


State 109

   62 objectdef: LEFT_SQUARE elist RIGHT_SQUARE .

    $default  reduce using rule 62 (objectdef)


State 110

   63 objectdef: LEFT_SQUARE indexed RIGHT_SQUARE .

    $default  reduce using rule 63 (objectdef)


State 111

   66 indexed: indexedelem COMMA . indexed

    LEFT_BRACE  shift, and go to state 61

    $default  reduce using rule 67 (indexed)

    indexed      go to state 145
    indexedelem  go to state 66


State 112

   29 term: LEFT_BRACKETS expr RIGHT_BRACKETS .

    $default  reduce using rule 29 (term)


State 113

   42 primary: LEFT_BRACKETS funcdef RIGHT_BRACKETS .
   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS . LEFT_BRACKETS elist RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 146

    $default  reduce using rule 42 (primary)


State 114

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83

    $default  reduce using rule 26 (expr)


State 115

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    AND             shift, and go to state 71
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83

    $default  reduce using rule 27 (expr)


State 116

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   24     | expr EQUALS expr .
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83

    EQUALS     error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 117

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    ASTERISK  shift, and go to state 76
    DIVISION  shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 15 (expr)


State 118

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    ASTERISK  shift, and go to state 76
    DIVISION  shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 16 (expr)


State 119

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   17     | expr ASTERISK expr .
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 120

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   18     | expr DIVISION expr .
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 121

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   19     | expr PERCENT expr .
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 122

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   25     | expr DIFFERENT expr .
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83

    EQUALS     error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 123

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   20     | expr GREATER expr .
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    ASTERISK  shift, and go to state 76
    DIVISION  shift, and go to state 77
    PERCENT   shift, and go to state 78

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 124

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   22     | expr LESS expr .
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    ASTERISK  shift, and go to state 76
    DIVISION  shift, and go to state 77
    PERCENT   shift, and go to state 78

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 125

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   21     | expr GREATER_EQUALS expr .
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    ASTERISK  shift, and go to state 76
    DIVISION  shift, and go to state 77
    PERCENT   shift, and go to state 78

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 126

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   23     | expr LESS_EQUALS expr .
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    ASTERISK  shift, and go to state 76
    DIVISION  shift, and go to state 77
    PERCENT   shift, and go to state 78

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 127

   48 member: lvalue DOT ID .

    $default  reduce using rule 48 (member)


State 128

   58 methodcall: Diaeresis ID . LEFT_BRACKETS elist RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 147


State 129

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   49 member: lvalue LEFT_SQUARE expr . RIGHT_SQUARE

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    RIGHT_SQUARE    shift, and go to state 148


State 130

   57 normcall: LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 149


State 131

   38 assignexpr: lvalue $@1 ASSIGN . expr

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 150
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 132

   50 member: call DOT ID .

    $default  reduce using rule 50 (member)


State 133

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   51 member: call LEFT_SQUARE expr . RIGHT_SQUARE

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    RIGHT_SQUARE    shift, and go to state 151


State 134

   52 call: call LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 152


State 135

   89 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS . stmt ELSE stmt
   90       | IF LEFT_BRACKETS expr RIGHT_BRACKETS . stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    stmt        go to state 153
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 136

   91 whilestmt: WHILE LEFT_BRACKETS expr RIGHT_BRACKETS . stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    stmt        go to state 154
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 137

   92 forstmt: FOR LEFT_BRACKETS elist SEMICOLON . expr SEMICOLON elist RIGHT_BRACKETS stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 155
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 138

   77 funcdef: FUNCTION ID $@4 LEFT_BRACKETS . $@5 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 76 ($@5)

    $@5  go to state 156


State 139

   85 idlist: ID .
   87       | ID . $@7 COMMA idlist

    COMMA     reduce using rule 86 ($@7)
    $default  reduce using rule 85 (idlist)

    $@7  go to state 157


State 140

   79 funcdef: FUNCTION LEFT_BRACKETS $@6 idlist . RIGHT_BRACKETS block_func

    RIGHT_BRACKETS  shift, and go to state 158


State 141

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS . LEFT_BRACKETS elist RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 146


State 142

   72 block: LEFT_BRACE $@3 statements RIGHT_BRACE .

    $default  reduce using rule 72 (block)


State 143

   68 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    expr        go to state 159
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 144

   60 elist: expr COMMA elist .

    $default  reduce using rule 60 (elist)


State 145

   66 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 66 (indexed)


State 146

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS . elist RIGHT_BRACKETS

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 160
    objectdef   go to state 34
    const       go to state 37


State 147

   58 methodcall: Diaeresis ID LEFT_BRACKETS . elist RIGHT_BRACKETS

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 161
    objectdef   go to state 34
    const       go to state 37


State 148

   49 member: lvalue LEFT_SQUARE expr RIGHT_SQUARE .

    $default  reduce using rule 49 (member)


State 149

   57 normcall: LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 57 (normcall)


State 150

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   38 assignexpr: lvalue $@1 ASSIGN expr .

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83

    $default  reduce using rule 38 (assignexpr)


State 151

   51 member: call LEFT_SQUARE expr RIGHT_SQUARE .

    $default  reduce using rule 51 (member)


State 152

   52 call: call LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 52 (call)


State 153

   89 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt . ELSE stmt
   90       | IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt .

    ELSE  shift, and go to state 162

    ELSE      [reduce using rule 90 (ifstmt)]
    $default  reduce using rule 90 (ifstmt)


State 154

   91 whilestmt: WHILE LEFT_BRACKETS expr RIGHT_BRACKETS stmt .

    $default  reduce using rule 91 (whilestmt)


State 155

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   92 forstmt: FOR LEFT_BRACKETS elist SEMICOLON expr . SEMICOLON elist RIGHT_BRACKETS stmt

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    SEMICOLON       shift, and go to state 163


State 156

   77 funcdef: FUNCTION ID $@4 LEFT_BRACKETS $@5 . idlist RIGHT_BRACKETS block_func

    ID  shift, and go to state 139

    $default  reduce using rule 88 (idlist)

    idlist  go to state 164


State 157

   87 idlist: ID $@7 . COMMA idlist

    COMMA  shift, and go to state 165


State 158

   79 funcdef: FUNCTION LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS . block_func

    LEFT_BRACE  shift, and go to state 166

    block_func  go to state 167


State 159

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   68 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    EQUALS          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    ASTERISK        shift, and go to state 76
    DIVISION        shift, and go to state 77
    PERCENT         shift, and go to state 78
    DIFFERENT       shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUALS  shift, and go to state 82
    LESS_EQUALS     shift, and go to state 83
    RIGHT_BRACE     shift, and go to state 168


State 160

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 169


State 161

   58 methodcall: Diaeresis ID LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 170


State 162

   89 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE . stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    stmt        go to state 171
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 163

   92 forstmt: FOR LEFT_BRACKETS elist SEMICOLON expr SEMICOLON . elist RIGHT_BRACKETS stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    DOUBLE_COLON   shift, and go to state 20
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    $default  reduce using rule 61 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 172
    objectdef   go to state 34
    const       go to state 37


State 164

   77 funcdef: FUNCTION ID $@4 LEFT_BRACKETS $@5 idlist . RIGHT_BRACKETS block_func

    RIGHT_BRACKETS  shift, and go to state 173


State 165

   87 idlist: ID $@7 COMMA . idlist

    ID  shift, and go to state 139

    $default  reduce using rule 88 (idlist)

    idlist  go to state 174


State 166

   73 block_func: LEFT_BRACE . RIGHT_BRACE
   74           | LEFT_BRACE . statements RIGHT_BRACE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    RIGHT_BRACE    shift, and go to state 175
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    stmt        go to state 25
    statements  go to state 176
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 167

   79 funcdef: FUNCTION LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func .

    $default  reduce using rule 79 (funcdef)


State 168

   68 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 68 (indexedelem)


State 169

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 54 (call)


State 170

   58 methodcall: Diaeresis ID LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 58 (methodcall)


State 171

   89 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt .

    $default  reduce using rule 89 (ifstmt)


State 172

   92 forstmt: FOR LEFT_BRACKETS elist SEMICOLON expr SEMICOLON elist . RIGHT_BRACKETS stmt

    RIGHT_BRACKETS  shift, and go to state 177


State 173

   77 funcdef: FUNCTION ID $@4 LEFT_BRACKETS $@5 idlist RIGHT_BRACKETS . block_func

    LEFT_BRACE  shift, and go to state 166

    block_func  go to state 178


State 174

   87 idlist: ID $@7 COMMA idlist .

    $default  reduce using rule 87 (idlist)


State 175

   73 block_func: LEFT_BRACE RIGHT_BRACE .

    $default  reduce using rule 73 (block_func)


State 176

   12 statements: statements . stmt
   74 block_func: LEFT_BRACE statements . RIGHT_BRACE

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    RIGHT_BRACE    shift, and go to state 179
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    stmt        go to state 70
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 177

   92 forstmt: FOR LEFT_BRACKETS elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS . stmt

    NUMBER         shift, and go to state 1
    ID             shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    FUNCTION       shift, and go to state 6
    RETURN         shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    NOT            shift, and go to state 10
    LOCALL         shift, and go to state 11
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    NIL            shift, and go to state 14
    STRING         shift, and go to state 15
    MINUS          shift, and go to state 16
    PLUS_PLUS      shift, and go to state 17
    MINUS_MINUS    shift, and go to state 18
    SEMICOLON      shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 20
    LEFT_BRACE     shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 22
    LEFT_BRACKETS  shift, and go to state 23

    stmt        go to state 180
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 178

   77 funcdef: FUNCTION ID $@4 LEFT_BRACKETS $@5 idlist RIGHT_BRACKETS block_func .

    $default  reduce using rule 77 (funcdef)


State 179

   74 block_func: LEFT_BRACE statements RIGHT_BRACE .

    $default  reduce using rule 74 (block_func)


State 180

   92 forstmt: FOR LEFT_BRACKETS elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt .

    $default  reduce using rule 92 (forstmt)
