State 156 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 stmt: expr SEMICOLON
    3     | ifstmt
    4     | whilestmt
    5     | forstmt
    6     | returnstmt
    7     | BREAK SEMICOLON
    8     | CONTINUE SEMICOLON
    9     | block
   10     | funcdef
   11     | SEMICOLON

   12 statements: statements stmt
   13           | stmt

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr ASTERISK expr
   18     | expr DIVISION expr
   19     | expr PERCENT expr
   20     | expr GREATER expr
   21     | expr GREATER_EQUALS expr
   22     | expr LESS expr
   23     | expr LESS_EQUALS expr
   24     | expr EQUALS expr
   25     | expr DIFFERENT expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LEFT_BRACKETS expr RIGHT_BRACKETS
   30     | MINUS expr
   31     | NOT expr
   32     | PLUS_PLUS lvalue
   33     | lvalue PLUS_PLUS
   34     | MINUS_MINUS lvalue
   35     | lvalue MINUS_MINUS
   36     | primary

   37 assignexpr: lvalue ASSIGN expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFT_BRACKETS funcdef RIGHT_BRACKETS
   42        | const

   43 lvalue: ID
   44       | LOCALL ID
   45       | DOUBLE_COLON ID
   46       | member

   47 member: lvalue DOT ID
   48       | lvalue LEFT_SQUARE expr RIGHT_SQUARE
   49       | call DOT ID
   50       | call LEFT_SQUARE expr RIGHT_SQUARE

   51 call: call LEFT_BRACKETS elist RIGHT_BRACKETS
   52     | lvalue callsuffix
   53     | LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS
   54     | LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS RIGHT_BRACKETS
   55     | call LEFT_BRACKETS RIGHT_BRACKETS

   56 callsuffix: normcall
   57           | methodcall

   58 normcall: LEFT_BRACKETS elist RIGHT_BRACKETS
   59         | LEFT_BRACKETS RIGHT_BRACKETS

   60 methodcall: Diaeresis ID LEFT_BRACKETS elist RIGHT_BRACKETS
   61           | Diaeresis ID LEFT_BRACKETS RIGHT_BRACKETS

   62 elist: expr
   63      | expr COMMA elist

   64 objectdef: LEFT_SQUARE elist RIGHT_SQUARE
   65          | LEFT_SQUARE indexed RIGHT_SQUARE
   66          | LEFT_SQUARE RIGHT_SQUARE

   67 indexed: indexedelem
   68        | indexedelem COMMA indexed

   69 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   70 $@1: %empty

   71 block: LEFT_BRACE $@1 RIGHT_BRACE

   72 $@2: %empty

   73 block: LEFT_BRACE $@2 statements RIGHT_BRACE

   74 $@3: %empty

   75 block_func: LEFT_BRACE $@3 RIGHT_BRACE

   76 $@4: %empty

   77 block_func: LEFT_BRACE $@4 statements RIGHT_BRACE

   78 $@5: %empty

   79 $@6: %empty

   80 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func

   81 $@7: %empty

   82 $@8: %empty

   83 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS block_func

   84 const: INTEGER
   85      | FLOAT
   86      | STRING
   87      | NIL
   88      | TRUE
   89      | FALSE

   90 idlist: ID

   91 $@9: %empty

   92 idlist: ID $@9 COMMA idlist
   93       | %empty

   94 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt
   95       | IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt

   96 $@10: %empty

   97 whilestmt: WHILE LEFT_BRACKETS $@10 expr RIGHT_BRACKETS stmt

   98 $@11: %empty

   99 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

  100 $@12: %empty

  101 forstmt: FOR LEFT_BRACKETS $@12 SEMICOLON expr SEMICOLON RIGHT_BRACKETS stmt

  102 returnstmt: RETURN expr SEMICOLON
  103           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 43 44 45 47 49 60 61 80 90 92
INTEGER (259) 84
FLOAT (260) 85
IF (261) 94 95
ELSE (262) 94
WHILE (263) 97
FOR (264) 99 101
FUNCTION (265) 80 83
RETURN (266) 102 103
BREAK (267) 7
CONTINUE (268) 8
AND (269) 26
NOT (270) 31
OR (271) 27
LOCALL (272) 44
TRUE (273) 88
FALSE (274) 89
NIL (275) 87
STRING (276) 86
EQUALS (277) 24
PLUS (278) 15
ASSIGN (279) 37
MINUS (280) 16 30
UMINUS (281)
ASTERISK (282) 17
DIVISION (283) 18
PERCENT (284) 19
DIFFERENT (285) 25
PLUS_PLUS (286) 32 33
MINUS_MINUS (287) 34 35
GREATER (288) 20
LESS (289) 22
GREATER_EQUALS (290) 21
LESS_EQUALS (291) 23
SEMICOLON (292) 2 7 8 11 99 101 102 103
COMMA (293) 63 68 92
COLON (294) 69
DOUBLE_COLON (295) 45
DOT (296) 47 49
Diaeresis (297) 60 61
LEFT_BRACE (298) 69 71 73 75 77
RIGHT_BRACE (299) 69 71 73 75 77
LEFT_SQUARE (300) 48 50 64 65 66
RIGHT_SQUARE (301) 48 50 64 65 66
LEFT_BRACKETS (302) 29 41 51 53 54 55 58 59 60 61 80 83 94 95 97 99
    101
RIGHT_BRACKETS (303) 29 41 51 53 54 55 58 59 60 61 80 83 94 95 97 99
    101


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
stmt (51)
    on left: 2 3 4 5 6 7 8 9 10 11, on right: 12 13 94 95 97 99 101
statements (52)
    on left: 12 13, on right: 1 12 73 77
expr (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    2 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 62 63
    69 94 95 97 99 101 102
term (54)
    on left: 29 30 31 32 33 34 35 36, on right: 28
assignexpr (55)
    on left: 37, on right: 14
primary (56)
    on left: 38 39 40 41 42, on right: 36
lvalue (57)
    on left: 43 44 45 46, on right: 32 33 34 35 37 38 47 48 52
member (58)
    on left: 47 48 49 50, on right: 46
call (59)
    on left: 51 52 53 54 55, on right: 39 49 50 51 55
callsuffix (60)
    on left: 56 57, on right: 52
normcall (61)
    on left: 58 59, on right: 56
methodcall (62)
    on left: 60 61, on right: 57
elist (63)
    on left: 62 63, on right: 51 53 58 60 63 64 99
objectdef (64)
    on left: 64 65 66, on right: 40
indexed (65)
    on left: 67 68, on right: 65 68
indexedelem (66)
    on left: 69, on right: 67 68
block (67)
    on left: 71 73, on right: 9
$@1 (68)
    on left: 70, on right: 71
$@2 (69)
    on left: 72, on right: 73
block_func (70)
    on left: 75 77, on right: 80 83
$@3 (71)
    on left: 74, on right: 75
$@4 (72)
    on left: 76, on right: 77
funcdef (73)
    on left: 80 83, on right: 10 41 53 54
$@5 (74)
    on left: 78, on right: 80
$@6 (75)
    on left: 79, on right: 80
$@7 (76)
    on left: 81, on right: 83
$@8 (77)
    on left: 82, on right: 83
const (78)
    on left: 84 85 86 87 88 89, on right: 42
idlist (79)
    on left: 90 92 93, on right: 80 83 92
$@9 (80)
    on left: 91, on right: 92
ifstmt (81)
    on left: 94 95, on right: 3
whilestmt (82)
    on left: 97, on right: 4
$@10 (83)
    on left: 96, on right: 97
forstmt (84)
    on left: 99 101, on right: 5
$@11 (85)
    on left: 98, on right: 99
$@12 (86)
    on left: 100, on right: 101
returnstmt (87)
    on left: 102 103, on right: 6


State 0

    0 $accept: . program $end

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    program     go to state 25
    stmt        go to state 26
    statements  go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 1

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 2

   84 const: INTEGER .

    $default  reduce using rule 84 (const)


State 3

   85 const: FLOAT .

    $default  reduce using rule 85 (const)


State 4

   94 ifstmt: IF . LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt
   95       | IF . LEFT_BRACKETS expr RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 43


State 5

   97 whilestmt: WHILE . LEFT_BRACKETS $@10 expr RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 44


State 6

   99 forstmt: FOR . LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt
  101        | FOR . LEFT_BRACKETS $@12 SEMICOLON expr SEMICOLON RIGHT_BRACKETS stmt

    LEFT_BRACKETS  shift, and go to state 45


State 7

   80 funcdef: FUNCTION . ID $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func
   83        | FUNCTION . $@7 LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS block_func

    ID  shift, and go to state 46

    $default  reduce using rule 81 ($@7)

    $@7  go to state 47


State 8

  102 returnstmt: RETURN . expr SEMICOLON
  103           | RETURN . SEMICOLON

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 48
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 9

    7 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 10

    8 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 11

   31 term: NOT . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 52
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 12

   44 lvalue: LOCALL . ID

    ID  shift, and go to state 53


State 13

   88 const: TRUE .

    $default  reduce using rule 88 (const)


State 14

   89 const: FALSE .

    $default  reduce using rule 89 (const)


State 15

   87 const: NIL .

    $default  reduce using rule 87 (const)


State 16

   86 const: STRING .

    $default  reduce using rule 86 (const)


State 17

   30 term: MINUS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 18

   32 term: PLUS_PLUS . lvalue

    ID             shift, and go to state 1
    LOCALL         shift, and go to state 12
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACKETS  shift, and go to state 55

    lvalue  go to state 56
    member  go to state 33
    call    go to state 57


State 19

   34 term: MINUS_MINUS . lvalue

    ID             shift, and go to state 1
    LOCALL         shift, and go to state 12
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACKETS  shift, and go to state 55

    lvalue  go to state 58
    member  go to state 33
    call    go to state 57


State 20

   11 stmt: SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 21

   45 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 59


State 22

   71 block: LEFT_BRACE . $@1 RIGHT_BRACE
   73      | LEFT_BRACE . $@2 statements RIGHT_BRACE

    RIGHT_BRACE  reduce using rule 70 ($@1)
    $default     reduce using rule 72 ($@2)

    $@1  go to state 60
    $@2  go to state 61


State 23

   64 objectdef: LEFT_SQUARE . elist RIGHT_SQUARE
   65          | LEFT_SQUARE . indexed RIGHT_SQUARE
   66          | LEFT_SQUARE . RIGHT_SQUARE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 62
    LEFT_SQUARE    shift, and go to state 23
    RIGHT_SQUARE   shift, and go to state 63
    LEFT_BRACKETS  shift, and go to state 24

    expr         go to state 64
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 65
    objectdef    go to state 35
    indexed      go to state 66
    indexedelem  go to state 67
    const        go to state 38


State 24

   29 term: LEFT_BRACKETS . expr RIGHT_BRACKETS
   41 primary: LEFT_BRACKETS . funcdef RIGHT_BRACKETS
   53 call: LEFT_BRACKETS . funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS
   54     | LEFT_BRACKETS . funcdef RIGHT_BRACKETS LEFT_BRACKETS RIGHT_BRACKETS

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    FUNCTION       shift, and go to state 7
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 69
    const       go to state 38


State 25

    0 $accept: program . $end

    $end  shift, and go to state 70


State 26

   13 statements: stmt .

    $default  reduce using rule 13 (statements)


State 27

    1 program: statements .
   12 statements: statements . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 71
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 28

    2 stmt: expr . SEMICOLON
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    SEMICOLON       shift, and go to state 85


State 29

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 30

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 31

   36 term: primary .

    $default  reduce using rule 36 (term)


State 32

   33 term: lvalue . PLUS_PLUS
   35     | lvalue . MINUS_MINUS
   37 assignexpr: lvalue . ASSIGN expr
   38 primary: lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   52 call: lvalue . callsuffix

    ASSIGN         shift, and go to state 86
    PLUS_PLUS      shift, and go to state 87
    MINUS_MINUS    shift, and go to state 88
    DOT            shift, and go to state 89
    Diaeresis      shift, and go to state 90
    LEFT_SQUARE    shift, and go to state 91
    LEFT_BRACKETS  shift, and go to state 92

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 33

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 34

   39 primary: call .
   49 member: call . DOT ID
   50       | call . LEFT_SQUARE expr RIGHT_SQUARE
   51 call: call . LEFT_BRACKETS elist RIGHT_BRACKETS
   55     | call . LEFT_BRACKETS RIGHT_BRACKETS

    DOT            shift, and go to state 96
    LEFT_SQUARE    shift, and go to state 97
    LEFT_BRACKETS  shift, and go to state 98

    $default  reduce using rule 39 (primary)


State 35

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 36

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 37

   10 stmt: funcdef .

    $default  reduce using rule 10 (stmt)


State 38

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 39

    3 stmt: ifstmt .

    $default  reduce using rule 3 (stmt)


State 40

    4 stmt: whilestmt .

    $default  reduce using rule 4 (stmt)


State 41

    5 stmt: forstmt .

    $default  reduce using rule 5 (stmt)


State 42

    6 stmt: returnstmt .

    $default  reduce using rule 6 (stmt)


State 43

   94 ifstmt: IF LEFT_BRACKETS . expr RIGHT_BRACKETS stmt ELSE stmt
   95       | IF LEFT_BRACKETS . expr RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 99
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 44

   97 whilestmt: WHILE LEFT_BRACKETS . $@10 expr RIGHT_BRACKETS stmt

    $default  reduce using rule 96 ($@10)

    $@10  go to state 100


State 45

   99 forstmt: FOR LEFT_BRACKETS . $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt
  101        | FOR LEFT_BRACKETS . $@12 SEMICOLON expr SEMICOLON RIGHT_BRACKETS stmt

    SEMICOLON  reduce using rule 100 ($@12)
    $default   reduce using rule 98 ($@11)

    $@11  go to state 101
    $@12  go to state 102


State 46

   80 funcdef: FUNCTION ID . $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 78 ($@5)

    $@5  go to state 103


State 47

   83 funcdef: FUNCTION $@7 . LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS block_func

    LEFT_BRACKETS  shift, and go to state 104


State 48

  103 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 103 (returnstmt)


State 49

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
  102 returnstmt: RETURN expr . SEMICOLON

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    SEMICOLON       shift, and go to state 105


State 50

    7 stmt: BREAK SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 51

    8 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 52

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 53

   44 lvalue: LOCALL ID .

    $default  reduce using rule 44 (lvalue)


State 54

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: MINUS expr .

    $default  reduce using rule 30 (term)


State 55

   53 call: LEFT_BRACKETS . funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS
   54     | LEFT_BRACKETS . funcdef RIGHT_BRACKETS LEFT_BRACKETS RIGHT_BRACKETS

    FUNCTION  shift, and go to state 7

    funcdef  go to state 106


State 56

   32 term: PLUS_PLUS lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   52 call: lvalue . callsuffix

    DOT            shift, and go to state 89
    Diaeresis      shift, and go to state 90
    LEFT_SQUARE    shift, and go to state 91
    LEFT_BRACKETS  shift, and go to state 92

    $default  reduce using rule 32 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 57

   49 member: call . DOT ID
   50       | call . LEFT_SQUARE expr RIGHT_SQUARE
   51 call: call . LEFT_BRACKETS elist RIGHT_BRACKETS
   55     | call . LEFT_BRACKETS RIGHT_BRACKETS

    DOT            shift, and go to state 96
    LEFT_SQUARE    shift, and go to state 97
    LEFT_BRACKETS  shift, and go to state 98


State 58

   34 term: MINUS_MINUS lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_SQUARE expr RIGHT_SQUARE
   52 call: lvalue . callsuffix

    DOT            shift, and go to state 89
    Diaeresis      shift, and go to state 90
    LEFT_SQUARE    shift, and go to state 91
    LEFT_BRACKETS  shift, and go to state 92

    $default  reduce using rule 34 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 59

   45 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 45 (lvalue)


State 60

   71 block: LEFT_BRACE $@1 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 107


State 61

   73 block: LEFT_BRACE $@2 . statements RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 26
    statements  go to state 108
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 62

   69 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 109
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 63

   66 objectdef: LEFT_SQUARE RIGHT_SQUARE .

    $default  reduce using rule 66 (objectdef)


State 64

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   62 elist: expr .
   63      | expr . COMMA elist

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    COMMA           shift, and go to state 110

    $default  reduce using rule 62 (elist)


State 65

   64 objectdef: LEFT_SQUARE elist . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 111


State 66

   65 objectdef: LEFT_SQUARE indexed . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 112


State 67

   67 indexed: indexedelem .
   68        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 113

    $default  reduce using rule 67 (indexed)


State 68

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LEFT_BRACKETS expr . RIGHT_BRACKETS

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    RIGHT_BRACKETS  shift, and go to state 114


State 69

   41 primary: LEFT_BRACKETS funcdef . RIGHT_BRACKETS
   53 call: LEFT_BRACKETS funcdef . RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS
   54     | LEFT_BRACKETS funcdef . RIGHT_BRACKETS LEFT_BRACKETS RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 115


State 70

    0 $accept: program $end .

    $default  accept


State 71

   12 statements: statements stmt .

    $default  reduce using rule 12 (statements)


State 72

   26 expr: expr AND . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 73

   27 expr: expr OR . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   24 expr: expr EQUALS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   15 expr: expr PLUS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   16 expr: expr MINUS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   17 expr: expr ASTERISK . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   18 expr: expr DIVISION . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   19 expr: expr PERCENT . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   25 expr: expr DIFFERENT . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

   20 expr: expr GREATER . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 82

   22 expr: expr LESS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   21 expr: expr GREATER_EQUALS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 84

   23 expr: expr LESS_EQUALS . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 85

    2 stmt: expr SEMICOLON .

    $default  reduce using rule 2 (stmt)


State 86

   37 assignexpr: lvalue ASSIGN . expr

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 87

   33 term: lvalue PLUS_PLUS .

    $default  reduce using rule 33 (term)


State 88

   35 term: lvalue MINUS_MINUS .

    $default  reduce using rule 35 (term)


State 89

   47 member: lvalue DOT . ID

    ID  shift, and go to state 130


State 90

   60 methodcall: Diaeresis . ID LEFT_BRACKETS elist RIGHT_BRACKETS
   61           | Diaeresis . ID LEFT_BRACKETS RIGHT_BRACKETS

    ID  shift, and go to state 131


State 91

   48 member: lvalue LEFT_SQUARE . expr RIGHT_SQUARE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 92

   58 normcall: LEFT_BRACKETS . elist RIGHT_BRACKETS
   59         | LEFT_BRACKETS . RIGHT_BRACKETS

    ID              shift, and go to state 1
    INTEGER         shift, and go to state 2
    FLOAT           shift, and go to state 3
    NOT             shift, and go to state 11
    LOCALL          shift, and go to state 12
    TRUE            shift, and go to state 13
    FALSE           shift, and go to state 14
    NIL             shift, and go to state 15
    STRING          shift, and go to state 16
    MINUS           shift, and go to state 17
    PLUS_PLUS       shift, and go to state 18
    MINUS_MINUS     shift, and go to state 19
    DOUBLE_COLON    shift, and go to state 21
    LEFT_SQUARE     shift, and go to state 23
    LEFT_BRACKETS   shift, and go to state 24
    RIGHT_BRACKETS  shift, and go to state 133

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 134
    objectdef   go to state 35
    const       go to state 38


State 93

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 94

   56 callsuffix: normcall .

    $default  reduce using rule 56 (callsuffix)


State 95

   57 callsuffix: methodcall .

    $default  reduce using rule 57 (callsuffix)


State 96

   49 member: call DOT . ID

    ID  shift, and go to state 135


State 97

   50 member: call LEFT_SQUARE . expr RIGHT_SQUARE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 136
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 98

   51 call: call LEFT_BRACKETS . elist RIGHT_BRACKETS
   55     | call LEFT_BRACKETS . RIGHT_BRACKETS

    ID              shift, and go to state 1
    INTEGER         shift, and go to state 2
    FLOAT           shift, and go to state 3
    NOT             shift, and go to state 11
    LOCALL          shift, and go to state 12
    TRUE            shift, and go to state 13
    FALSE           shift, and go to state 14
    NIL             shift, and go to state 15
    STRING          shift, and go to state 16
    MINUS           shift, and go to state 17
    PLUS_PLUS       shift, and go to state 18
    MINUS_MINUS     shift, and go to state 19
    DOUBLE_COLON    shift, and go to state 21
    LEFT_SQUARE     shift, and go to state 23
    LEFT_BRACKETS   shift, and go to state 24
    RIGHT_BRACKETS  shift, and go to state 137

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 138
    objectdef   go to state 35
    const       go to state 38


State 99

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   94 ifstmt: IF LEFT_BRACKETS expr . RIGHT_BRACKETS stmt ELSE stmt
   95       | IF LEFT_BRACKETS expr . RIGHT_BRACKETS stmt

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    RIGHT_BRACKETS  shift, and go to state 139


State 100

   97 whilestmt: WHILE LEFT_BRACKETS $@10 . expr RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 140
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 101

   99 forstmt: FOR LEFT_BRACKETS $@11 . elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 141
    objectdef   go to state 35
    const       go to state 38


State 102

  101 forstmt: FOR LEFT_BRACKETS $@12 . SEMICOLON expr SEMICOLON RIGHT_BRACKETS stmt

    SEMICOLON  shift, and go to state 142


State 103

   80 funcdef: FUNCTION ID $@5 . LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func

    LEFT_BRACKETS  shift, and go to state 143


State 104

   83 funcdef: FUNCTION $@7 LEFT_BRACKETS . $@8 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 82 ($@8)

    $@8  go to state 144


State 105

  102 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 102 (returnstmt)


State 106

   53 call: LEFT_BRACKETS funcdef . RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS
   54     | LEFT_BRACKETS funcdef . RIGHT_BRACKETS LEFT_BRACKETS RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 145


State 107

   71 block: LEFT_BRACE $@1 RIGHT_BRACE .

    $default  reduce using rule 71 (block)


State 108

   12 statements: statements . stmt
   73 block: LEFT_BRACE $@2 statements . RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    RIGHT_BRACE    shift, and go to state 146
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 71
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 109

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   69 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    COLON           shift, and go to state 147


State 110

   63 elist: expr COMMA . elist

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 148
    objectdef   go to state 35
    const       go to state 38


State 111

   64 objectdef: LEFT_SQUARE elist RIGHT_SQUARE .

    $default  reduce using rule 64 (objectdef)


State 112

   65 objectdef: LEFT_SQUARE indexed RIGHT_SQUARE .

    $default  reduce using rule 65 (objectdef)


State 113

   68 indexed: indexedelem COMMA . indexed

    LEFT_BRACE  shift, and go to state 62

    indexed      go to state 149
    indexedelem  go to state 67


State 114

   29 term: LEFT_BRACKETS expr RIGHT_BRACKETS .

    $default  reduce using rule 29 (term)


State 115

   41 primary: LEFT_BRACKETS funcdef RIGHT_BRACKETS .
   53 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS . LEFT_BRACKETS elist RIGHT_BRACKETS
   54     | LEFT_BRACKETS funcdef RIGHT_BRACKETS . LEFT_BRACKETS RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 150

    $default  reduce using rule 41 (primary)


State 116

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84

    $default  reduce using rule 26 (expr)


State 117

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    AND             shift, and go to state 72
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84

    $default  reduce using rule 27 (expr)


State 118

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   24     | expr EQUALS expr .
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84

    EQUALS     error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 119

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    ASTERISK  shift, and go to state 77
    DIVISION  shift, and go to state 78
    PERCENT   shift, and go to state 79

    $default  reduce using rule 15 (expr)


State 120

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    ASTERISK  shift, and go to state 77
    DIVISION  shift, and go to state 78
    PERCENT   shift, and go to state 79

    $default  reduce using rule 16 (expr)


State 121

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   17     | expr ASTERISK expr .
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 122

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   18     | expr DIVISION expr .
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 123

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   19     | expr PERCENT expr .
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 124

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   25     | expr DIFFERENT expr .
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84

    EQUALS     error (nonassociative)
    DIFFERENT  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 125

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   20     | expr GREATER expr .
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    ASTERISK  shift, and go to state 77
    DIVISION  shift, and go to state 78
    PERCENT   shift, and go to state 79

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 126

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   22     | expr LESS expr .
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    ASTERISK  shift, and go to state 77
    DIVISION  shift, and go to state 78
    PERCENT   shift, and go to state 79

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 127

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   21     | expr GREATER_EQUALS expr .
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    ASTERISK  shift, and go to state 77
    DIVISION  shift, and go to state 78
    PERCENT   shift, and go to state 79

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 128

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   23     | expr LESS_EQUALS expr .
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    ASTERISK  shift, and go to state 77
    DIVISION  shift, and go to state 78
    PERCENT   shift, and go to state 79

    GREATER         error (nonassociative)
    LESS            error (nonassociative)
    GREATER_EQUALS  error (nonassociative)
    LESS_EQUALS     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 129

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   37 assignexpr: lvalue ASSIGN expr .

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84

    $default  reduce using rule 37 (assignexpr)


State 130

   47 member: lvalue DOT ID .

    $default  reduce using rule 47 (member)


State 131

   60 methodcall: Diaeresis ID . LEFT_BRACKETS elist RIGHT_BRACKETS
   61           | Diaeresis ID . LEFT_BRACKETS RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 151


State 132

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   48 member: lvalue LEFT_SQUARE expr . RIGHT_SQUARE

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    RIGHT_SQUARE    shift, and go to state 152


State 133

   59 normcall: LEFT_BRACKETS RIGHT_BRACKETS .

    $default  reduce using rule 59 (normcall)


State 134

   58 normcall: LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 153


State 135

   49 member: call DOT ID .

    $default  reduce using rule 49 (member)


State 136

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   50 member: call LEFT_SQUARE expr . RIGHT_SQUARE

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    RIGHT_SQUARE    shift, and go to state 154


State 137

   55 call: call LEFT_BRACKETS RIGHT_BRACKETS .

    $default  reduce using rule 55 (call)


State 138

   51 call: call LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 155


State 139

   94 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS . stmt ELSE stmt
   95       | IF LEFT_BRACKETS expr RIGHT_BRACKETS . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 156
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 140

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   97 whilestmt: WHILE LEFT_BRACKETS $@10 expr . RIGHT_BRACKETS stmt

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    RIGHT_BRACKETS  shift, and go to state 157


State 141

   99 forstmt: FOR LEFT_BRACKETS $@11 elist . SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt

    SEMICOLON  shift, and go to state 158


State 142

  101 forstmt: FOR LEFT_BRACKETS $@12 SEMICOLON . expr SEMICOLON RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 159
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 143

   80 funcdef: FUNCTION ID $@5 LEFT_BRACKETS . $@6 idlist RIGHT_BRACKETS block_func

    $default  reduce using rule 79 ($@6)

    $@6  go to state 160


State 144

   83 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 . idlist RIGHT_BRACKETS block_func

    ID  shift, and go to state 161

    $default  reduce using rule 93 (idlist)

    idlist  go to state 162


State 145

   53 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS . LEFT_BRACKETS elist RIGHT_BRACKETS
   54     | LEFT_BRACKETS funcdef RIGHT_BRACKETS . LEFT_BRACKETS RIGHT_BRACKETS

    LEFT_BRACKETS  shift, and go to state 150


State 146

   73 block: LEFT_BRACE $@2 statements RIGHT_BRACE .

    $default  reduce using rule 73 (block)


State 147

   69 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 163
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 148

   63 elist: expr COMMA elist .

    $default  reduce using rule 63 (elist)


State 149

   68 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 68 (indexed)


State 150

   53 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS . elist RIGHT_BRACKETS
   54     | LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS . RIGHT_BRACKETS

    ID              shift, and go to state 1
    INTEGER         shift, and go to state 2
    FLOAT           shift, and go to state 3
    NOT             shift, and go to state 11
    LOCALL          shift, and go to state 12
    TRUE            shift, and go to state 13
    FALSE           shift, and go to state 14
    NIL             shift, and go to state 15
    STRING          shift, and go to state 16
    MINUS           shift, and go to state 17
    PLUS_PLUS       shift, and go to state 18
    MINUS_MINUS     shift, and go to state 19
    DOUBLE_COLON    shift, and go to state 21
    LEFT_SQUARE     shift, and go to state 23
    LEFT_BRACKETS   shift, and go to state 24
    RIGHT_BRACKETS  shift, and go to state 164

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 165
    objectdef   go to state 35
    const       go to state 38


State 151

   60 methodcall: Diaeresis ID LEFT_BRACKETS . elist RIGHT_BRACKETS
   61           | Diaeresis ID LEFT_BRACKETS . RIGHT_BRACKETS

    ID              shift, and go to state 1
    INTEGER         shift, and go to state 2
    FLOAT           shift, and go to state 3
    NOT             shift, and go to state 11
    LOCALL          shift, and go to state 12
    TRUE            shift, and go to state 13
    FALSE           shift, and go to state 14
    NIL             shift, and go to state 15
    STRING          shift, and go to state 16
    MINUS           shift, and go to state 17
    PLUS_PLUS       shift, and go to state 18
    MINUS_MINUS     shift, and go to state 19
    DOUBLE_COLON    shift, and go to state 21
    LEFT_SQUARE     shift, and go to state 23
    LEFT_BRACKETS   shift, and go to state 24
    RIGHT_BRACKETS  shift, and go to state 166

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 167
    objectdef   go to state 35
    const       go to state 38


State 152

   48 member: lvalue LEFT_SQUARE expr RIGHT_SQUARE .

    $default  reduce using rule 48 (member)


State 153

   58 normcall: LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 58 (normcall)


State 154

   50 member: call LEFT_SQUARE expr RIGHT_SQUARE .

    $default  reduce using rule 50 (member)


State 155

   51 call: call LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 51 (call)


State 156

   94 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt . ELSE stmt
   95       | IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt .

    ELSE  shift, and go to state 168

    ELSE      [reduce using rule 95 (ifstmt)]
    $default  reduce using rule 95 (ifstmt)


State 157

   97 whilestmt: WHILE LEFT_BRACKETS $@10 expr RIGHT_BRACKETS . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 169
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 158

   99 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON . expr SEMICOLON elist RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 170
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 159

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
  101 forstmt: FOR LEFT_BRACKETS $@12 SEMICOLON expr . SEMICOLON RIGHT_BRACKETS stmt

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    SEMICOLON       shift, and go to state 171


State 160

   80 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 . idlist RIGHT_BRACKETS block_func

    ID  shift, and go to state 161

    $default  reduce using rule 93 (idlist)

    idlist  go to state 172


State 161

   90 idlist: ID .
   92       | ID . $@9 COMMA idlist

    COMMA     reduce using rule 91 ($@9)
    $default  reduce using rule 90 (idlist)

    $@9  go to state 173


State 162

   83 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 idlist . RIGHT_BRACKETS block_func

    RIGHT_BRACKETS  shift, and go to state 174


State 163

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   69 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    RIGHT_BRACE     shift, and go to state 175


State 164

   54 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS RIGHT_BRACKETS .

    $default  reduce using rule 54 (call)


State 165

   53 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 176


State 166

   61 methodcall: Diaeresis ID LEFT_BRACKETS RIGHT_BRACKETS .

    $default  reduce using rule 61 (methodcall)


State 167

   60 methodcall: Diaeresis ID LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 177


State 168

   94 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 178
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 169

   97 whilestmt: WHILE LEFT_BRACKETS $@10 expr RIGHT_BRACKETS stmt .

    $default  reduce using rule 97 (whilestmt)


State 170

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . ASTERISK expr
   18     | expr . DIVISION expr
   19     | expr . PERCENT expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUALS expr
   22     | expr . LESS expr
   23     | expr . LESS_EQUALS expr
   24     | expr . EQUALS expr
   25     | expr . DIFFERENT expr
   26     | expr . AND expr
   27     | expr . OR expr
   99 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr . SEMICOLON elist RIGHT_BRACKETS stmt

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    EQUALS          shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    ASTERISK        shift, and go to state 77
    DIVISION        shift, and go to state 78
    PERCENT         shift, and go to state 79
    DIFFERENT       shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUALS  shift, and go to state 83
    LESS_EQUALS     shift, and go to state 84
    SEMICOLON       shift, and go to state 179


State 171

  101 forstmt: FOR LEFT_BRACKETS $@12 SEMICOLON expr SEMICOLON . RIGHT_BRACKETS stmt

    RIGHT_BRACKETS  shift, and go to state 180


State 172

   80 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 idlist . RIGHT_BRACKETS block_func

    RIGHT_BRACKETS  shift, and go to state 181


State 173

   92 idlist: ID $@9 . COMMA idlist

    COMMA  shift, and go to state 182


State 174

   83 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS . block_func

    LEFT_BRACE  shift, and go to state 183

    block_func  go to state 184


State 175

   69 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 69 (indexedelem)


State 176

   53 call: LEFT_BRACKETS funcdef RIGHT_BRACKETS LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 53 (call)


State 177

   60 methodcall: Diaeresis ID LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 60 (methodcall)


State 178

   94 ifstmt: IF LEFT_BRACKETS expr RIGHT_BRACKETS stmt ELSE stmt .

    $default  reduce using rule 94 (ifstmt)


State 179

   99 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON . elist RIGHT_BRACKETS stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    DOUBLE_COLON   shift, and go to state 21
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 185
    objectdef   go to state 35
    const       go to state 38


State 180

  101 forstmt: FOR LEFT_BRACKETS $@12 SEMICOLON expr SEMICOLON RIGHT_BRACKETS . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 186
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 181

   80 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS . block_func

    LEFT_BRACE  shift, and go to state 183

    block_func  go to state 187


State 182

   92 idlist: ID $@9 COMMA . idlist

    ID  shift, and go to state 161

    $default  reduce using rule 93 (idlist)

    idlist  go to state 188


State 183

   75 block_func: LEFT_BRACE . $@3 RIGHT_BRACE
   77           | LEFT_BRACE . $@4 statements RIGHT_BRACE

    RIGHT_BRACE  reduce using rule 74 ($@3)
    $default     reduce using rule 76 ($@4)

    $@3  go to state 189
    $@4  go to state 190


State 184

   83 funcdef: FUNCTION $@7 LEFT_BRACKETS $@8 idlist RIGHT_BRACKETS block_func .

    $default  reduce using rule 83 (funcdef)


State 185

   99 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist . RIGHT_BRACKETS stmt

    RIGHT_BRACKETS  shift, and go to state 191


State 186

  101 forstmt: FOR LEFT_BRACKETS $@12 SEMICOLON expr SEMICOLON RIGHT_BRACKETS stmt .

    $default  reduce using rule 101 (forstmt)


State 187

   80 funcdef: FUNCTION ID $@5 LEFT_BRACKETS $@6 idlist RIGHT_BRACKETS block_func .

    $default  reduce using rule 80 (funcdef)


State 188

   92 idlist: ID $@9 COMMA idlist .

    $default  reduce using rule 92 (idlist)


State 189

   75 block_func: LEFT_BRACE $@3 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 192


State 190

   77 block_func: LEFT_BRACE $@4 . statements RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 26
    statements  go to state 193
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 191

   99 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS . stmt

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 194
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 192

   75 block_func: LEFT_BRACE $@3 RIGHT_BRACE .

    $default  reduce using rule 75 (block_func)


State 193

   12 statements: statements . stmt
   77 block_func: LEFT_BRACE $@4 statements . RIGHT_BRACE

    ID             shift, and go to state 1
    INTEGER        shift, and go to state 2
    FLOAT          shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    FUNCTION       shift, and go to state 7
    RETURN         shift, and go to state 8
    BREAK          shift, and go to state 9
    CONTINUE       shift, and go to state 10
    NOT            shift, and go to state 11
    LOCALL         shift, and go to state 12
    TRUE           shift, and go to state 13
    FALSE          shift, and go to state 14
    NIL            shift, and go to state 15
    STRING         shift, and go to state 16
    MINUS          shift, and go to state 17
    PLUS_PLUS      shift, and go to state 18
    MINUS_MINUS    shift, and go to state 19
    SEMICOLON      shift, and go to state 20
    DOUBLE_COLON   shift, and go to state 21
    LEFT_BRACE     shift, and go to state 22
    RIGHT_BRACE    shift, and go to state 195
    LEFT_SQUARE    shift, and go to state 23
    LEFT_BRACKETS  shift, and go to state 24

    stmt        go to state 71
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 194

   99 forstmt: FOR LEFT_BRACKETS $@11 elist SEMICOLON expr SEMICOLON elist RIGHT_BRACKETS stmt .

    $default  reduce using rule 99 (forstmt)


State 195

   77 block_func: LEFT_BRACE $@4 statements RIGHT_BRACE .

    $default  reduce using rule 77 (block_func)
