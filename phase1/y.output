Terminals unused in grammar

   '|'
   '&'


State 29 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce
State 46 conflicts: 14 shift/reduce
State 48 conflicts: 9 shift/reduce
State 52 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 102 conflicts: 14 shift/reduce
State 104 conflicts: 14 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 152 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt

    2 stmt: expr
    3     | ifstmt
    4     | whilestmt
    5     | forstmt
    6     | returnstmt
    7     | BREAK
    8     | CONTINUE
    9     | block
   10     | funcdef
   11     | %empty

   12 expr: assignexpr
   13     | expr op expr
   14     | term

   15 op: '+'
   16   | '-'
   17   | '*'
   18   | '/'
   19   | '%'
   20   | '>'
   21   | ">="
   22   | '<'
   23   | "<="
   24   | "=="
   25   | "!="
   26   | AND
   27   | OR

   28 term: '(' expr ')'
   29     | '-' expr
   30     | NOT expr
   31     | "++" lvalue
   32     | lvalue "++"
   33     | "--" lvalue
   34     | lvalue "--"
   35     | primary

   36 assignexpr: lvalue '=' expr

   37 primary: lvalue
   38        | call
   39        | objectdef
   40        | '(' funcdef ')'
   41        | const

   42 lvalue: ID
   43       | LOCAL ID
   44       | "::" ID
   45       | member

   46 member: lvalue '.' ID
   47       | lvalue '[' expr ']'
   48       | call '.' ID
   49       | call '[' expr ']'

   50 call: call '(' elist ')'
   51     | lvalue callsuffix
   52     | '(' funcdef ')' '(' elist ')'

   53 callsuffix: normcall
   54           | methodcall

   55 normcall: '(' elist ')'

   56 methodcall: ".." ID '(' elist ')'

   57 elist: '[' expr '[' ',' expr ']' ']'

   58 objectdef: '[' '[' elist
   59          | indexed ']' ']'

   60 indexed: '[' indexedelem '[' ',' indexedelem ']' ']'

   61 indexedelem: '{'

   62 expr: expr '}'

   63 block: '{' '[' stmt ']' '}'

   64 funcdef: FUNCTION '[' ID ']' '(' idlist ')' block

   65 const: NUMBER
   66      | STRING
   67      | NIL
   68      | TRUE
   69      | FALSE

   70 idlist: '[' ID '[' ',' ID ']' ']'

   71 ifstmt: IF '(' expr ')' stmt '[' ELSE stmt ']'

   72 whilestmt: WHILE '(' expr ')' stmt

   73 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt

   74 returnstmt: RETURN '[' expr ']'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 19
'&' (38)
'(' (40) 28 40 50 52 55 56 64 71 72 73
')' (41) 28 40 50 52 55 56 64 71 72 73
'*' (42) 17
'+' (43) 15
',' (44) 57 60 70
'-' (45) 16 29
'.' (46) 46 48
'/' (47) 18
';' (59) 73
'<' (60) 22
'=' (61) 36
'>' (62) 20
'[' (91) 47 49 57 58 60 63 64 70 71 74
']' (93) 47 49 57 59 60 63 64 70 71 74
'{' (123) 61 63
'|' (124)
'}' (125) 62 63
error (256)
NUMBER (258) 65
IF (259) 71
ELSE (260) 71
WHILE (261) 72
FOR (262) 73
FUNCTION (263) 64
RETURN (264) 74
BREAK (265) 7
CONTINUE (266) 8
AND (267) 26
NOT (268) 30
OR (269) 27
LOCAL (270) 43
TRUE (271) 68
FALSE (272) 69
NIL (273) 67
STRING (274) 66
ID (275) 42 43 44 46 48 56 64 70
">=" (276) 21
"<=" (277) 23
"==" (278) 24
"!=" (279) 25
"++" (280) 31 32
"--" (281) 33 34
"::" (282) 44
".." (283) 56


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
stmt (50)
    on left: 2 3 4 5 6 7 8 9 10 11, on right: 1 63 71 72 73
expr (51)
    on left: 12 13 14 62, on right: 2 13 28 29 30 36 47 49 57 62 71
    72 73 74
op (52)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27, on right: 13
term (53)
    on left: 28 29 30 31 32 33 34 35, on right: 14
assignexpr (54)
    on left: 36, on right: 12
primary (55)
    on left: 37 38 39 40 41, on right: 35
lvalue (56)
    on left: 42 43 44 45, on right: 31 32 33 34 36 37 46 47 51
member (57)
    on left: 46 47 48 49, on right: 45
call (58)
    on left: 50 51 52, on right: 38 48 49 50
callsuffix (59)
    on left: 53 54, on right: 51
normcall (60)
    on left: 55, on right: 53
methodcall (61)
    on left: 56, on right: 54
elist (62)
    on left: 57, on right: 50 52 55 56 58 73
objectdef (63)
    on left: 58 59, on right: 39
indexed (64)
    on left: 60, on right: 59
indexedelem (65)
    on left: 61, on right: 60
block (66)
    on left: 63, on right: 9 64
funcdef (67)
    on left: 64, on right: 10 40 52
const (68)
    on left: 65 66 67 68 69, on right: 41
idlist (69)
    on left: 70, on right: 64
ifstmt (70)
    on left: 71, on right: 3
whilestmt (71)
    on left: 72, on right: 4
forstmt (72)
    on left: 73, on right: 5
returnstmt (73)
    on left: 74, on right: 6


State 0

    0 $accept: . program $end

    NUMBER    shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    FOR       shift, and go to state 4
    FUNCTION  shift, and go to state 5
    RETURN    shift, and go to state 6
    BREAK     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    NOT       shift, and go to state 9
    LOCAL     shift, and go to state 10
    TRUE      shift, and go to state 11
    FALSE     shift, and go to state 12
    NIL       shift, and go to state 13
    STRING    shift, and go to state 14
    ID        shift, and go to state 15
    '-'       shift, and go to state 16
    '('       shift, and go to state 17
    "++"      shift, and go to state 18
    "--"      shift, and go to state 19
    "::"      shift, and go to state 20
    '['       shift, and go to state 21
    '{'       shift, and go to state 22

    $default  reduce using rule 11 (stmt)

    program     go to state 23
    stmt        go to state 24
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 1

   65 const: NUMBER .

    $default  reduce using rule 65 (const)


State 2

   71 ifstmt: IF . '(' expr ')' stmt '[' ELSE stmt ']'

    '('  shift, and go to state 41


State 3

   72 whilestmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 42


State 4

   73 forstmt: FOR . '(' elist ';' expr ';' elist ')' stmt

    '('  shift, and go to state 43


State 5

   64 funcdef: FUNCTION . '[' ID ']' '(' idlist ')' block

    '['  shift, and go to state 44


State 6

   74 returnstmt: RETURN . '[' expr ']'

    '['  shift, and go to state 45


State 7

    7 stmt: BREAK .

    $default  reduce using rule 7 (stmt)


State 8

    8 stmt: CONTINUE .

    $default  reduce using rule 8 (stmt)


State 9

   30 term: NOT . expr

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 46
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 10

   43 lvalue: LOCAL . ID

    ID  shift, and go to state 47


State 11

   68 const: TRUE .

    $default  reduce using rule 68 (const)


State 12

   69 const: FALSE .

    $default  reduce using rule 69 (const)


State 13

   67 const: NIL .

    $default  reduce using rule 67 (const)


State 14

   66 const: STRING .

    $default  reduce using rule 66 (const)


State 15

   42 lvalue: ID .

    $default  reduce using rule 42 (lvalue)


State 16

   29 term: '-' . expr

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 48
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 17

   28 term: '(' . expr ')'
   40 primary: '(' . funcdef ')'
   52 call: '(' . funcdef ')' '(' elist ')'

    NUMBER    shift, and go to state 1
    FUNCTION  shift, and go to state 5
    NOT       shift, and go to state 9
    LOCAL     shift, and go to state 10
    TRUE      shift, and go to state 11
    FALSE     shift, and go to state 12
    NIL       shift, and go to state 13
    STRING    shift, and go to state 14
    ID        shift, and go to state 15
    '-'       shift, and go to state 16
    '('       shift, and go to state 17
    "++"      shift, and go to state 18
    "--"      shift, and go to state 19
    "::"      shift, and go to state 20
    '['       shift, and go to state 21

    expr        go to state 49
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    funcdef     go to state 50
    const       go to state 36


State 18

   31 term: "++" . lvalue

    LOCAL  shift, and go to state 10
    ID     shift, and go to state 15
    '('    shift, and go to state 51
    "::"   shift, and go to state 20

    lvalue  go to state 52
    member  go to state 30
    call    go to state 53


State 19

   33 term: "--" . lvalue

    LOCAL  shift, and go to state 10
    ID     shift, and go to state 15
    '('    shift, and go to state 51
    "::"   shift, and go to state 20

    lvalue  go to state 54
    member  go to state 30
    call    go to state 53


State 20

   44 lvalue: "::" . ID

    ID  shift, and go to state 55


State 21

   58 objectdef: '[' . '[' elist
   60 indexed: '[' . indexedelem '[' ',' indexedelem ']' ']'

    '['  shift, and go to state 56
    '{'  shift, and go to state 57

    indexedelem  go to state 58


State 22

   63 block: '{' . '[' stmt ']' '}'

    '['  shift, and go to state 59


State 23

    0 $accept: program . $end

    $end  shift, and go to state 60


State 24

    1 program: stmt .

    $default  reduce using rule 1 (program)


State 25

    2 stmt: expr .
   13 expr: expr . op expr
   62     | expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    '}'   shift, and go to state 74

    $default  reduce using rule 2 (stmt)

    op  go to state 75


State 26

   14 expr: term .

    $default  reduce using rule 14 (expr)


State 27

   12 expr: assignexpr .

    $default  reduce using rule 12 (expr)


State 28

   35 term: primary .

    $default  reduce using rule 35 (term)


State 29

   32 term: lvalue . "++"
   34     | lvalue . "--"
   36 assignexpr: lvalue . '=' expr
   37 primary: lvalue .
   46 member: lvalue . '.' ID
   47       | lvalue . '[' expr ']'
   51 call: lvalue . callsuffix

    '('   shift, and go to state 76
    "++"  shift, and go to state 77
    "--"  shift, and go to state 78
    '='   shift, and go to state 79
    '.'   shift, and go to state 80
    '['   shift, and go to state 81
    ".."  shift, and go to state 82

    '['       [reduce using rule 37 (primary)]
    $default  reduce using rule 37 (primary)

    callsuffix  go to state 83
    normcall    go to state 84
    methodcall  go to state 85


State 30

   45 lvalue: member .

    $default  reduce using rule 45 (lvalue)


State 31

   38 primary: call .
   48 member: call . '.' ID
   49       | call . '[' expr ']'
   50 call: call . '(' elist ')'

    '('  shift, and go to state 86
    '.'  shift, and go to state 87
    '['  shift, and go to state 88

    '['       [reduce using rule 38 (primary)]
    $default  reduce using rule 38 (primary)


State 32

   39 primary: objectdef .

    $default  reduce using rule 39 (primary)


State 33

   59 objectdef: indexed . ']' ']'

    ']'  shift, and go to state 89


State 34

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 35

   10 stmt: funcdef .

    $default  reduce using rule 10 (stmt)


State 36

   41 primary: const .

    $default  reduce using rule 41 (primary)


State 37

    3 stmt: ifstmt .

    $default  reduce using rule 3 (stmt)


State 38

    4 stmt: whilestmt .

    $default  reduce using rule 4 (stmt)


State 39

    5 stmt: forstmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: returnstmt .

    $default  reduce using rule 6 (stmt)


State 41

   71 ifstmt: IF '(' . expr ')' stmt '[' ELSE stmt ']'

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 90
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 42

   72 whilestmt: WHILE '(' . expr ')' stmt

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 91
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 43

   73 forstmt: FOR '(' . elist ';' expr ';' elist ')' stmt

    '['  shift, and go to state 92

    elist  go to state 93


State 44

   64 funcdef: FUNCTION '[' . ID ']' '(' idlist ')' block

    ID  shift, and go to state 94


State 45

   74 returnstmt: RETURN '[' . expr ']'

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 95
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 46

   13 expr: expr . op expr
   30 term: NOT expr .
   62 expr: expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    '}'   shift, and go to state 74

    AND       [reduce using rule 30 (term)]
    OR        [reduce using rule 30 (term)]
    '+'       [reduce using rule 30 (term)]
    '-'       [reduce using rule 30 (term)]
    '*'       [reduce using rule 30 (term)]
    '/'       [reduce using rule 30 (term)]
    '%'       [reduce using rule 30 (term)]
    '>'       [reduce using rule 30 (term)]
    ">="      [reduce using rule 30 (term)]
    '<'       [reduce using rule 30 (term)]
    "<="      [reduce using rule 30 (term)]
    "=="      [reduce using rule 30 (term)]
    "!="      [reduce using rule 30 (term)]
    '}'       [reduce using rule 30 (term)]
    $default  reduce using rule 30 (term)

    op  go to state 75


State 47

   43 lvalue: LOCAL ID .

    $default  reduce using rule 43 (lvalue)


State 48

   13 expr: expr . op expr
   29 term: '-' expr .
   62 expr: expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    '}'   shift, and go to state 74

    AND       [reduce using rule 29 (term)]
    OR        [reduce using rule 29 (term)]
    '>'       [reduce using rule 29 (term)]
    ">="      [reduce using rule 29 (term)]
    '<'       [reduce using rule 29 (term)]
    "<="      [reduce using rule 29 (term)]
    "=="      [reduce using rule 29 (term)]
    "!="      [reduce using rule 29 (term)]
    '}'       [reduce using rule 29 (term)]
    $default  reduce using rule 29 (term)

    op  go to state 75


State 49

   13 expr: expr . op expr
   28 term: '(' expr . ')'
   62 expr: expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    ')'   shift, and go to state 96
    '}'   shift, and go to state 74

    op  go to state 75


State 50

   40 primary: '(' funcdef . ')'
   52 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 97


State 51

   52 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION  shift, and go to state 5

    funcdef  go to state 98


State 52

   31 term: "++" lvalue .
   46 member: lvalue . '.' ID
   47       | lvalue . '[' expr ']'
   51 call: lvalue . callsuffix

    '('   shift, and go to state 76
    '.'   shift, and go to state 80
    '['   shift, and go to state 81
    ".."  shift, and go to state 82

    '['       [reduce using rule 31 (term)]
    $default  reduce using rule 31 (term)

    callsuffix  go to state 83
    normcall    go to state 84
    methodcall  go to state 85


State 53

   48 member: call . '.' ID
   49       | call . '[' expr ']'
   50 call: call . '(' elist ')'

    '('  shift, and go to state 86
    '.'  shift, and go to state 87
    '['  shift, and go to state 88


State 54

   33 term: "--" lvalue .
   46 member: lvalue . '.' ID
   47       | lvalue . '[' expr ']'
   51 call: lvalue . callsuffix

    '('   shift, and go to state 76
    '.'   shift, and go to state 80
    '['   shift, and go to state 81
    ".."  shift, and go to state 82

    '['       [reduce using rule 33 (term)]
    $default  reduce using rule 33 (term)

    callsuffix  go to state 83
    normcall    go to state 84
    methodcall  go to state 85


State 55

   44 lvalue: "::" ID .

    $default  reduce using rule 44 (lvalue)


State 56

   58 objectdef: '[' '[' . elist

    '['  shift, and go to state 92

    elist  go to state 99


State 57

   61 indexedelem: '{' .

    $default  reduce using rule 61 (indexedelem)


State 58

   60 indexed: '[' indexedelem . '[' ',' indexedelem ']' ']'

    '['  shift, and go to state 100


State 59

   63 block: '{' '[' . stmt ']' '}'

    NUMBER    shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    FOR       shift, and go to state 4
    FUNCTION  shift, and go to state 5
    RETURN    shift, and go to state 6
    BREAK     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    NOT       shift, and go to state 9
    LOCAL     shift, and go to state 10
    TRUE      shift, and go to state 11
    FALSE     shift, and go to state 12
    NIL       shift, and go to state 13
    STRING    shift, and go to state 14
    ID        shift, and go to state 15
    '-'       shift, and go to state 16
    '('       shift, and go to state 17
    "++"      shift, and go to state 18
    "--"      shift, and go to state 19
    "::"      shift, and go to state 20
    '['       shift, and go to state 21
    '{'       shift, and go to state 22

    $default  reduce using rule 11 (stmt)

    stmt        go to state 101
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 60

    0 $accept: program $end .

    $default  accept


State 61

   26 op: AND .

    $default  reduce using rule 26 (op)


State 62

   27 op: OR .

    $default  reduce using rule 27 (op)


State 63

   15 op: '+' .

    $default  reduce using rule 15 (op)


State 64

   16 op: '-' .

    $default  reduce using rule 16 (op)


State 65

   17 op: '*' .

    $default  reduce using rule 17 (op)


State 66

   18 op: '/' .

    $default  reduce using rule 18 (op)


State 67

   19 op: '%' .

    $default  reduce using rule 19 (op)


State 68

   20 op: '>' .

    $default  reduce using rule 20 (op)


State 69

   21 op: ">=" .

    $default  reduce using rule 21 (op)


State 70

   22 op: '<' .

    $default  reduce using rule 22 (op)


State 71

   23 op: "<=" .

    $default  reduce using rule 23 (op)


State 72

   24 op: "==" .

    $default  reduce using rule 24 (op)


State 73

   25 op: "!=" .

    $default  reduce using rule 25 (op)


State 74

   62 expr: expr '}' .

    $default  reduce using rule 62 (expr)


State 75

   13 expr: expr op . expr

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 102
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 76

   55 normcall: '(' . elist ')'

    '['  shift, and go to state 92

    elist  go to state 103


State 77

   32 term: lvalue "++" .

    $default  reduce using rule 32 (term)


State 78

   34 term: lvalue "--" .

    $default  reduce using rule 34 (term)


State 79

   36 assignexpr: lvalue '=' . expr

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 104
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 80

   46 member: lvalue '.' . ID

    ID  shift, and go to state 105


State 81

   47 member: lvalue '[' . expr ']'

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 106
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 82

   56 methodcall: ".." . ID '(' elist ')'

    ID  shift, and go to state 107


State 83

   51 call: lvalue callsuffix .

    $default  reduce using rule 51 (call)


State 84

   53 callsuffix: normcall .

    $default  reduce using rule 53 (callsuffix)


State 85

   54 callsuffix: methodcall .

    $default  reduce using rule 54 (callsuffix)


State 86

   50 call: call '(' . elist ')'

    '['  shift, and go to state 92

    elist  go to state 108


State 87

   48 member: call '.' . ID

    ID  shift, and go to state 109


State 88

   49 member: call '[' . expr ']'

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 110
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 89

   59 objectdef: indexed ']' . ']'

    ']'  shift, and go to state 111


State 90

   13 expr: expr . op expr
   62     | expr . '}'
   71 ifstmt: IF '(' expr . ')' stmt '[' ELSE stmt ']'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    ')'   shift, and go to state 112
    '}'   shift, and go to state 74

    op  go to state 75


State 91

   13 expr: expr . op expr
   62     | expr . '}'
   72 whilestmt: WHILE '(' expr . ')' stmt

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    ')'   shift, and go to state 113
    '}'   shift, and go to state 74

    op  go to state 75


State 92

   57 elist: '[' . expr '[' ',' expr ']' ']'

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 114
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 93

   73 forstmt: FOR '(' elist . ';' expr ';' elist ')' stmt

    ';'  shift, and go to state 115


State 94

   64 funcdef: FUNCTION '[' ID . ']' '(' idlist ')' block

    ']'  shift, and go to state 116


State 95

   13 expr: expr . op expr
   62     | expr . '}'
   74 returnstmt: RETURN '[' expr . ']'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    ']'   shift, and go to state 117
    '}'   shift, and go to state 74

    op  go to state 75


State 96

   28 term: '(' expr ')' .

    $default  reduce using rule 28 (term)


State 97

   40 primary: '(' funcdef ')' .
   52 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 118

    $default  reduce using rule 40 (primary)


State 98

   52 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 119


State 99

   58 objectdef: '[' '[' elist .

    $default  reduce using rule 58 (objectdef)


State 100

   60 indexed: '[' indexedelem '[' . ',' indexedelem ']' ']'

    ','  shift, and go to state 120


State 101

   63 block: '{' '[' stmt . ']' '}'

    ']'  shift, and go to state 121


State 102

   13 expr: expr . op expr
   13     | expr op expr .
   62     | expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    '}'   shift, and go to state 74

    AND       [reduce using rule 13 (expr)]
    OR        [reduce using rule 13 (expr)]
    '+'       [reduce using rule 13 (expr)]
    '-'       [reduce using rule 13 (expr)]
    '*'       [reduce using rule 13 (expr)]
    '/'       [reduce using rule 13 (expr)]
    '%'       [reduce using rule 13 (expr)]
    '>'       [reduce using rule 13 (expr)]
    ">="      [reduce using rule 13 (expr)]
    '<'       [reduce using rule 13 (expr)]
    "<="      [reduce using rule 13 (expr)]
    "=="      [reduce using rule 13 (expr)]
    "!="      [reduce using rule 13 (expr)]
    '}'       [reduce using rule 13 (expr)]
    $default  reduce using rule 13 (expr)

    op  go to state 75


State 103

   55 normcall: '(' elist . ')'

    ')'  shift, and go to state 122


State 104

   13 expr: expr . op expr
   36 assignexpr: lvalue '=' expr .
   62 expr: expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    '}'   shift, and go to state 74

    AND       [reduce using rule 36 (assignexpr)]
    OR        [reduce using rule 36 (assignexpr)]
    '+'       [reduce using rule 36 (assignexpr)]
    '-'       [reduce using rule 36 (assignexpr)]
    '*'       [reduce using rule 36 (assignexpr)]
    '/'       [reduce using rule 36 (assignexpr)]
    '%'       [reduce using rule 36 (assignexpr)]
    '>'       [reduce using rule 36 (assignexpr)]
    ">="      [reduce using rule 36 (assignexpr)]
    '<'       [reduce using rule 36 (assignexpr)]
    "<="      [reduce using rule 36 (assignexpr)]
    "=="      [reduce using rule 36 (assignexpr)]
    "!="      [reduce using rule 36 (assignexpr)]
    '}'       [reduce using rule 36 (assignexpr)]
    $default  reduce using rule 36 (assignexpr)

    op  go to state 75


State 105

   46 member: lvalue '.' ID .

    $default  reduce using rule 46 (member)


State 106

   13 expr: expr . op expr
   47 member: lvalue '[' expr . ']'
   62 expr: expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    ']'   shift, and go to state 123
    '}'   shift, and go to state 74

    op  go to state 75


State 107

   56 methodcall: ".." ID . '(' elist ')'

    '('  shift, and go to state 124


State 108

   50 call: call '(' elist . ')'

    ')'  shift, and go to state 125


State 109

   48 member: call '.' ID .

    $default  reduce using rule 48 (member)


State 110

   13 expr: expr . op expr
   49 member: call '[' expr . ']'
   62 expr: expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    ']'   shift, and go to state 126
    '}'   shift, and go to state 74

    op  go to state 75


State 111

   59 objectdef: indexed ']' ']' .

    $default  reduce using rule 59 (objectdef)


State 112

   71 ifstmt: IF '(' expr ')' . stmt '[' ELSE stmt ']'

    NUMBER    shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    FOR       shift, and go to state 4
    FUNCTION  shift, and go to state 5
    RETURN    shift, and go to state 6
    BREAK     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    NOT       shift, and go to state 9
    LOCAL     shift, and go to state 10
    TRUE      shift, and go to state 11
    FALSE     shift, and go to state 12
    NIL       shift, and go to state 13
    STRING    shift, and go to state 14
    ID        shift, and go to state 15
    '-'       shift, and go to state 16
    '('       shift, and go to state 17
    "++"      shift, and go to state 18
    "--"      shift, and go to state 19
    "::"      shift, and go to state 20
    '['       shift, and go to state 21
    '{'       shift, and go to state 22

    '['  [reduce using rule 11 (stmt)]

    stmt        go to state 127
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 113

   72 whilestmt: WHILE '(' expr ')' . stmt

    NUMBER    shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    FOR       shift, and go to state 4
    FUNCTION  shift, and go to state 5
    RETURN    shift, and go to state 6
    BREAK     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    NOT       shift, and go to state 9
    LOCAL     shift, and go to state 10
    TRUE      shift, and go to state 11
    FALSE     shift, and go to state 12
    NIL       shift, and go to state 13
    STRING    shift, and go to state 14
    ID        shift, and go to state 15
    '-'       shift, and go to state 16
    '('       shift, and go to state 17
    "++"      shift, and go to state 18
    "--"      shift, and go to state 19
    "::"      shift, and go to state 20
    '['       shift, and go to state 21
    '{'       shift, and go to state 22

    '['       [reduce using rule 11 (stmt)]
    $default  reduce using rule 11 (stmt)

    stmt        go to state 128
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 114

   13 expr: expr . op expr
   57 elist: '[' expr . '[' ',' expr ']' ']'
   62 expr: expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    '['   shift, and go to state 129
    '}'   shift, and go to state 74

    op  go to state 75


State 115

   73 forstmt: FOR '(' elist ';' . expr ';' elist ')' stmt

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 130
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 116

   64 funcdef: FUNCTION '[' ID ']' . '(' idlist ')' block

    '('  shift, and go to state 131


State 117

   74 returnstmt: RETURN '[' expr ']' .

    $default  reduce using rule 74 (returnstmt)


State 118

   52 call: '(' funcdef ')' '(' . elist ')'

    '['  shift, and go to state 92

    elist  go to state 132


State 119

   52 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 118


State 120

   60 indexed: '[' indexedelem '[' ',' . indexedelem ']' ']'

    '{'  shift, and go to state 57

    indexedelem  go to state 133


State 121

   63 block: '{' '[' stmt ']' . '}'

    '}'  shift, and go to state 134


State 122

   55 normcall: '(' elist ')' .

    $default  reduce using rule 55 (normcall)


State 123

   47 member: lvalue '[' expr ']' .

    $default  reduce using rule 47 (member)


State 124

   56 methodcall: ".." ID '(' . elist ')'

    '['  shift, and go to state 92

    elist  go to state 135


State 125

   50 call: call '(' elist ')' .

    $default  reduce using rule 50 (call)


State 126

   49 member: call '[' expr ']' .

    $default  reduce using rule 49 (member)


State 127

   71 ifstmt: IF '(' expr ')' stmt . '[' ELSE stmt ']'

    '['  shift, and go to state 136


State 128

   72 whilestmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 72 (whilestmt)


State 129

   57 elist: '[' expr '[' . ',' expr ']' ']'

    ','  shift, and go to state 137


State 130

   13 expr: expr . op expr
   62     | expr . '}'
   73 forstmt: FOR '(' elist ';' expr . ';' elist ')' stmt

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    '}'   shift, and go to state 74
    ';'   shift, and go to state 138

    op  go to state 75


State 131

   64 funcdef: FUNCTION '[' ID ']' '(' . idlist ')' block

    '['  shift, and go to state 139

    idlist  go to state 140


State 132

   52 call: '(' funcdef ')' '(' elist . ')'

    ')'  shift, and go to state 141


State 133

   60 indexed: '[' indexedelem '[' ',' indexedelem . ']' ']'

    ']'  shift, and go to state 142


State 134

   63 block: '{' '[' stmt ']' '}' .

    $default  reduce using rule 63 (block)


State 135

   56 methodcall: ".." ID '(' elist . ')'

    ')'  shift, and go to state 143


State 136

   71 ifstmt: IF '(' expr ')' stmt '[' . ELSE stmt ']'

    ELSE  shift, and go to state 144


State 137

   57 elist: '[' expr '[' ',' . expr ']' ']'

    NUMBER  shift, and go to state 1
    NOT     shift, and go to state 9
    LOCAL   shift, and go to state 10
    TRUE    shift, and go to state 11
    FALSE   shift, and go to state 12
    NIL     shift, and go to state 13
    STRING  shift, and go to state 14
    ID      shift, and go to state 15
    '-'     shift, and go to state 16
    '('     shift, and go to state 17
    "++"    shift, and go to state 18
    "--"    shift, and go to state 19
    "::"    shift, and go to state 20
    '['     shift, and go to state 21

    expr        go to state 145
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    const       go to state 36


State 138

   73 forstmt: FOR '(' elist ';' expr ';' . elist ')' stmt

    '['  shift, and go to state 92

    elist  go to state 146


State 139

   70 idlist: '[' . ID '[' ',' ID ']' ']'

    ID  shift, and go to state 147


State 140

   64 funcdef: FUNCTION '[' ID ']' '(' idlist . ')' block

    ')'  shift, and go to state 148


State 141

   52 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 52 (call)


State 142

   60 indexed: '[' indexedelem '[' ',' indexedelem ']' . ']'

    ']'  shift, and go to state 149


State 143

   56 methodcall: ".." ID '(' elist ')' .

    $default  reduce using rule 56 (methodcall)


State 144

   71 ifstmt: IF '(' expr ')' stmt '[' ELSE . stmt ']'

    NUMBER    shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    FOR       shift, and go to state 4
    FUNCTION  shift, and go to state 5
    RETURN    shift, and go to state 6
    BREAK     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    NOT       shift, and go to state 9
    LOCAL     shift, and go to state 10
    TRUE      shift, and go to state 11
    FALSE     shift, and go to state 12
    NIL       shift, and go to state 13
    STRING    shift, and go to state 14
    ID        shift, and go to state 15
    '-'       shift, and go to state 16
    '('       shift, and go to state 17
    "++"      shift, and go to state 18
    "--"      shift, and go to state 19
    "::"      shift, and go to state 20
    '['       shift, and go to state 21
    '{'       shift, and go to state 22

    $default  reduce using rule 11 (stmt)

    stmt        go to state 150
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 145

   13 expr: expr . op expr
   57 elist: '[' expr '[' ',' expr . ']' ']'
   62 expr: expr . '}'

    AND   shift, and go to state 61
    OR    shift, and go to state 62
    '+'   shift, and go to state 63
    '-'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '%'   shift, and go to state 67
    '>'   shift, and go to state 68
    ">="  shift, and go to state 69
    '<'   shift, and go to state 70
    "<="  shift, and go to state 71
    "=="  shift, and go to state 72
    "!="  shift, and go to state 73
    ']'   shift, and go to state 151
    '}'   shift, and go to state 74

    op  go to state 75


State 146

   73 forstmt: FOR '(' elist ';' expr ';' elist . ')' stmt

    ')'  shift, and go to state 152


State 147

   70 idlist: '[' ID . '[' ',' ID ']' ']'

    '['  shift, and go to state 153


State 148

   64 funcdef: FUNCTION '[' ID ']' '(' idlist ')' . block

    '{'  shift, and go to state 22

    block  go to state 154


State 149

   60 indexed: '[' indexedelem '[' ',' indexedelem ']' ']' .

    $default  reduce using rule 60 (indexed)


State 150

   71 ifstmt: IF '(' expr ')' stmt '[' ELSE stmt . ']'

    ']'  shift, and go to state 155


State 151

   57 elist: '[' expr '[' ',' expr ']' . ']'

    ']'  shift, and go to state 156


State 152

   73 forstmt: FOR '(' elist ';' expr ';' elist ')' . stmt

    NUMBER    shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    FOR       shift, and go to state 4
    FUNCTION  shift, and go to state 5
    RETURN    shift, and go to state 6
    BREAK     shift, and go to state 7
    CONTINUE  shift, and go to state 8
    NOT       shift, and go to state 9
    LOCAL     shift, and go to state 10
    TRUE      shift, and go to state 11
    FALSE     shift, and go to state 12
    NIL       shift, and go to state 13
    STRING    shift, and go to state 14
    ID        shift, and go to state 15
    '-'       shift, and go to state 16
    '('       shift, and go to state 17
    "++"      shift, and go to state 18
    "--"      shift, and go to state 19
    "::"      shift, and go to state 20
    '['       shift, and go to state 21
    '{'       shift, and go to state 22

    '['       [reduce using rule 11 (stmt)]
    $default  reduce using rule 11 (stmt)

    stmt        go to state 157
    expr        go to state 25
    term        go to state 26
    assignexpr  go to state 27
    primary     go to state 28
    lvalue      go to state 29
    member      go to state 30
    call        go to state 31
    objectdef   go to state 32
    indexed     go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 153

   70 idlist: '[' ID '[' . ',' ID ']' ']'

    ','  shift, and go to state 158


State 154

   64 funcdef: FUNCTION '[' ID ']' '(' idlist ')' block .

    $default  reduce using rule 64 (funcdef)


State 155

   71 ifstmt: IF '(' expr ')' stmt '[' ELSE stmt ']' .

    $default  reduce using rule 71 (ifstmt)


State 156

   57 elist: '[' expr '[' ',' expr ']' ']' .

    $default  reduce using rule 57 (elist)


State 157

   73 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt .

    $default  reduce using rule 73 (forstmt)


State 158

   70 idlist: '[' ID '[' ',' . ID ']' ']'

    ID  shift, and go to state 159


State 159

   70 idlist: '[' ID '[' ',' ID . ']' ']'

    ']'  shift, and go to state 160


State 160

   70 idlist: '[' ID '[' ',' ID ']' . ']'

    ']'  shift, and go to state 161


State 161

   70 idlist: '[' ID '[' ',' ID ']' ']' .

    $default  reduce using rule 70 (idlist)
